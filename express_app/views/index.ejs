<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<title>Signup</title>
<style id="applicationStylesheet" type="text/css">
  body {
    margin: 0;
    padding: 0;
  }
  :root {
    --web-view-ids: Android_Mobile___26;
  }
  #Android_Mobile___26 * {
    margin: 0;
    padding: 0;
  }
  #Android_Mobile___26 {
    position: absolute;
    box-sizing: border-box;
    background: #E5E5E5;
    width: 360px;
    height: 640px;
    background-color: rgba(255,255,255,1);
    overflow: hidden;
    margin: 0;
    padding: 0;
    --web-view-name: Android Mobile â€“ 26;
    --web-view-id: Android_Mobile___26;
    --web-scale-to-fit: true;
    --web-enable-scale-up: true;
    --web-scale-on-resize: true;
    --web-scale-on-double-click: true;
    --web-show-scale-controls: true;
    --web-actual-size-on-double-click: true;
    --web-refresh-for-changes: true;
    --web-enable-deep-linking: true;
  }
  #Group_72 {
    position: absolute;
    width: 503.276px;
    height: 283.25px;
    left: -71.138px;
    top: 403.913px;
    overflow: visible;
  }
  #Ellipse_15 {
    fill: rgba(226,228,239,1);
  }
  .Ellipse_15 {
    position: absolute;
    overflow: visible;
    width: 441.867px;
    height: 168.601px;
    left: 30.704px;
    top: 62.855px;
  }
  #Ellipse_34 {
    fill: rgba(233,235,243,1);
  }
  .Ellipse_34 {
    position: absolute;
    overflow: visible;
    width: 503.276px;
    height: 214.169px;
    left: 0px;
    top: 69.082px;
  }
  #Group_43 {
    position: absolute;
    width: 54.771px;
    height: 54.771px;
    left: 176.138px;
    top: 15px;
    overflow: visible;
  }
  #Group_35 {
    position: absolute;
    width: 54.771px;
    height: 54.771px;
    left: 0px;
    top: 0px;
    overflow: visible;
  }
  #Group_32 {
    position: absolute;
    width: 54.771px;
    height: 54.771px;
    left: 0px;
    top: 0px;
    overflow: visible;
  }
  #Path_44 {
    fill: rgba(255,129,183,1);
    stroke: rgb(255, 153, 196);
    stroke-width: 3px;
    stroke-linejoin: miter;
    stroke-linecap: butt;
    stroke-miterlimit: 4;
    shape-rendering: auto;
  }
  .Path_44 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 0px;
    left: 0px;
    width: 60.771px;
    height: 60.771px;
  }
  #Path_42 {
    fill: transparent;
    stroke: rgb(59, 59, 76);
    stroke-width: 2px;
    stroke-linejoin: round;
    stroke-linecap: round;
    stroke-miterlimit: 4;
    shape-rendering: auto;
  }
  .Path_42 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 12.055px;
    left: 30.011px;
    width: 7.953px;
    height: 4.677px;
  }
  #Path_43 {
    fill: transparent;
    stroke: rgb(59, 59, 76);
    stroke-width: 2px;
    stroke-linejoin: round;
    stroke-linecap: round;
    stroke-miterlimit: 4;
    shape-rendering: auto;
  }
  .Path_43 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 12.055px;
    left: 19.018px;
    width: 7.954px;
    height: 4.677px;
  }
  #Path_41 {
    fill: transparent;
    stroke: rgb(59, 59, 76);
    stroke-width: 2px;
    stroke-linejoin: round;
    stroke-linecap: round;
    stroke-miterlimit: 4;
    shape-rendering: auto;
  }
  .Path_41 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 19.024px;
    left: 18.185px;
    width: 21.383px;
    height: 5.247px;
  }
  #Subtraction_5 {
    opacity: 0.47;
    fill: rgba(255,232,242,1);
  }
  .Subtraction_5 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 35.053px;
    left: 1.087px;
    width: 52.597px;
    height: 16.718px;
  }
  #Union_2 {
    opacity: 0.7;
    fill: rgba(255,231,241,1);
  }
  .Union_2 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 29.371px;
    left: 22.699px;
    width: 8.442px;
    height: 5.157px;
  }
  #Group_36 {
    position: absolute;
    width: 48.963px;
    height: 48.963px;
    left: 277.138px;
    top: 22.809px;
    overflow: visible;
  }
  #Group_33 {
    position: absolute;
    width: 48.963px;
    height: 48.963px;
    left: 0px;
    top: 0px;
    overflow: visible;
  }
  #Path_44_A7_Path_5 {
    fill: rgba(80,218,189,1);
    stroke: rgb(142, 240, 219);
    stroke-width: 3px;
    stroke-linejoin: miter;
    stroke-linecap: butt;
    stroke-miterlimit: 4;
    shape-rendering: auto;
  }
  .Path_44_A7_Path_5 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 0px;
    left: 0px;
    width: 48.963px;
    height: 48.963px;
  }
  #Path_42_A7_Path_6 {
    fill: transparent;
    stroke: rgb(59, 59, 76);
    stroke-width: 2px;
    stroke-linejoin: round;
    stroke-linecap: round;
    stroke-miterlimit: 4;
    shape-rendering: auto;
  }
  .Path_42_A7_Path_6 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 10.777px;
    left: 26.829px;
    width: 7.322px;
    height: 4.394px;
  }
  #Path_43_A7_Path_7 {
    fill: transparent;
    stroke: rgb(59, 59, 76);
    stroke-width: 2px;
    stroke-linejoin: round;
    stroke-linecap: round;
    stroke-miterlimit: 4;
    shape-rendering: auto;
  }
  .Path_43_A7_Path_7 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 10.777px;
    left: 17.001px;
    width: 7.322px;
    height: 4.394px;
  }
  #Path_41_A7_Path_8 {
    fill: transparent;
    stroke: rgb(59, 59, 76);
    stroke-width: 2px;
    stroke-linejoin: round;
    stroke-linecap: round;
    stroke-miterlimit: 4;
    shape-rendering: auto;
  }
  .Path_41_A7_Path_8 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 17.006px;
    left: 16.256px;
    width: 19.328px;
    height: 4.903px;
  }
  #Group_34 {
    position: absolute;
    width: 72px;
    height: 72px;
    left: 217.138px;
    top: 0px;
    overflow: visible;
  }
  #Ellipse_14 {
    fill: rgba(132,147,253,1);
    stroke: rgb(163, 174, 253);
    stroke-width: 3px;
    stroke-linejoin: miter;
    stroke-linecap: butt;
    stroke-miterlimit: 4;
    shape-rendering: auto;
  }
  .Ellipse_14 {
    position: absolute;
    overflow: visible;
    width: 72px;
    height: 72px;
    left: 0px;
    top: 0px;
  }
  #Path_30 {
    fill: transparent;
    stroke: rgb(59, 59, 76);
    stroke-width: 2px;
    stroke-linejoin: round;
    stroke-linecap: round;
    stroke-miterlimit: 4;
    shape-rendering: auto;
  }
  .Path_30 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 15.848px;
    left: 39.451px;
    width: 9.825px;
    height: 5.518px;
  }
  #Path_32 {
    fill: transparent;
    stroke: rgb(59, 59, 76);
    stroke-width: 2px;
    stroke-linejoin: round;
    stroke-linecap: round;
    stroke-miterlimit: 4;
    shape-rendering: auto;
  }
  .Path_32 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 15.848px;
    left: 25px;
    width: 9.825px;
    height: 5.518px;
  }
  #Path_36 {
    fill: transparent;
    stroke: rgb(59, 59, 76);
    stroke-width: 2px;
    stroke-linejoin: round;
    stroke-linecap: round;
    stroke-miterlimit: 4;
    shape-rendering: auto;
  }
  .Path_36 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 25.008px;
    left: 23.905px;
    width: 27.481px;
    height: 6.268px;
  }
  #Group_40 {
    position: absolute;
    width: 34px;
    height: 17px;
    left: 285.837px;
    top: 50.087px;
    overflow: visible;
  }
  #Ellipse_16 {
    fill: rgba(118,222,200,1);
  }
  .Ellipse_16 {
    position: absolute;
    overflow: visible;
    width: 2px;
    height: 2px;
    left: 13px;
    top: 1px;
  }
  #Ellipse_17 {
    fill: rgba(118,222,200,1);
  }
  .Ellipse_17 {
    position: absolute;
    overflow: visible;
    width: 2px;
    height: 2px;
    left: 20px;
    top: 1px;
  }
  #Ellipse_18 {
    fill: rgba(118,222,200,1);
  }
  .Ellipse_18 {
    position: absolute;
    overflow: visible;
    width: 2px;
    height: 2px;
    left: 27px;
    top: 2px;
  }
  #Ellipse_20 {
    fill: rgba(118,222,200,1);
  }
  .Ellipse_20 {
    position: absolute;
    overflow: visible;
    width: 2px;
    height: 2px;
    left: 27px;
    top: 8px;
  }
  #Ellipse_21 {
    fill: rgba(118,222,200,1);
  }
  .Ellipse_21 {
    position: absolute;
    overflow: visible;
    width: 2px;
    height: 2px;
    left: 32px;
    top: 0px;
  }
  #Ellipse_22 {
    fill: rgba(118,222,200,1);
  }
  .Ellipse_22 {
    position: absolute;
    overflow: visible;
    width: 2px;
    height: 2px;
    left: 32px;
    top: 6px;
  }
  #Ellipse_23 {
    fill: rgba(118,222,200,1);
  }
  .Ellipse_23 {
    position: absolute;
    overflow: visible;
    width: 2px;
    height: 2px;
    left: 16px;
    top: 9px;
  }
  #Ellipse_24 {
    fill: rgba(118,222,200,1);
  }
  .Ellipse_24 {
    position: absolute;
    overflow: visible;
    width: 2px;
    height: 2px;
    left: 22px;
    top: 6px;
  }
  #Ellipse_25 {
    fill: rgba(118,222,200,1);
  }
  .Ellipse_25 {
    position: absolute;
    overflow: visible;
    width: 2px;
    height: 2px;
    left: 22px;
    top: 13px;
  }
  #Ellipse_26 {
    fill: rgba(118,222,200,1);
  }
  .Ellipse_26 {
    position: absolute;
    overflow: visible;
    width: 2px;
    height: 2px;
    left: 8px;
    top: 13px;
  }
  #Ellipse_27 {
    fill: rgba(118,222,200,1);
  }
  .Ellipse_27 {
    position: absolute;
    overflow: visible;
    width: 2px;
    height: 2px;
    left: 7px;
    top: 7px;
  }
  #Ellipse_28 {
    fill: rgba(118,222,200,1);
  }
  .Ellipse_28 {
    position: absolute;
    overflow: visible;
    width: 2px;
    height: 2px;
    left: 2px;
    top: 9px;
  }
  #Ellipse_29 {
    fill: rgba(118,222,200,1);
  }
  .Ellipse_29 {
    position: absolute;
    overflow: visible;
    width: 2px;
    height: 2px;
    left: 12px;
    top: 6px;
  }
  #Ellipse_30 {
    fill: rgba(118,222,200,1);
  }
  .Ellipse_30 {
    position: absolute;
    overflow: visible;
    width: 2px;
    height: 2px;
    left: 0px;
    top: 4px;
  }
  #Ellipse_31 {
    fill: rgba(118,222,200,1);
  }
  .Ellipse_31 {
    position: absolute;
    overflow: visible;
    width: 2px;
    height: 2px;
    left: 5px;
    top: 1px;
  }
  #Ellipse_32 {
    fill: rgba(118,222,200,1);
  }
  .Ellipse_32 {
    position: absolute;
    overflow: visible;
    width: 2px;
    height: 2px;
    left: 15px;
    top: 15px;
  }
  #Group_97 {
    position: absolute;
    width: 172px;
    height: 47px;
    left: 94px;
    top: 538px;
    overflow: visible;
  }
  #Rectangle_1824 {
    fill: rgba(86,103,218,1);
  }
  .Rectangle_1824 {
    position: absolute;
    overflow: visible;
    width: 172px;
    height: 45px;
    left: 0px;
    top: 2px;
  }
  #Rectangle_1821 {
    fill: rgba(80,102,253,1);
  }
  .Rectangle_1821 {
    position: absolute;
    overflow: visible;
    width: 172px;
    height: 45px;
    left: 0px;
    top: 0px;
  }
  #Join_Advaita {
    position: absolute;
    left: 40px;
    top: 13px;
    overflow: visible;
    width: 93px;
    white-space: nowrap;
    line-height: 25px;
    margin-top: -4.5px;
    text-align: center;
    font-family: Inter;
    font-style: normal;
    font-weight: normal;
    font-size: 16px;
    color: rgba(255,255,255,1);
  }
  #Join_Advaita_and_enjoy {
    position: absolute;
    left: 74px;
    top: 50px;
    overflow: visible;
    width: 213px;
    white-space: nowrap;
    line-height: 25px;
    margin-top: -3.5px;
    text-align: center;
    font-family: Libre Baskerville;
    font-style: normal;
    font-weight: normal;
    font-size: 18px;
    color: rgba(78,78,95,1);
  }
  #Username_or_Email {
    position: absolute;
    left: 78px;
    top: 605px;
    overflow: visible;
    width: 206px;
    white-space: nowrap;
    line-height: 18px;
    margin-top: -3px;
    text-align: left;
    font-family: Inter;
    font-style: normal;
    font-weight: normal;
    font-size: 12px;
    color: rgba(59,59,76,1);
  }
  #Group_80 {
    position: absolute;
    width: 198px;
    height: 234.129px;
    left: 81px;
    top: 120px;
    overflow: visible;
  }
  #Group_76 {
    position: absolute;
    width: 198px;
    height: 40px;
    left: 0px;
    top: 0px;
    overflow: visible;
  }
  #dance {
    position: absolute;
    width: 40px;
    height: 40px;
    left: 0px;
    top: 0px;
    overflow: visible;
  }
  #Group_75 {
    position: absolute;
    width: 40px;
    height: 40px;
    left: 0px;
    top: 0px;
    overflow: visible;
  }
  #Group_74 {
    position: absolute;
    width: 40px;
    height: 40px;
    left: 0px;
    top: 0px;
    overflow: visible;
  }
  #Path_57 {
    fill: rgba(80,102,253,1);
  }
  .Path_57 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 11.333px;
    left: 2.667px;
    width: 8px;
    height: 8px;
  }
  #Path_58 {
    fill: rgba(80,102,253,1);
  }
  .Path_58 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 0px;
    left: 4.667px;
    width: 9.333px;
    height: 9.333px;
  }
  #Path_59 {
    fill: rgba(80,102,253,1);
  }
  .Path_59 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 29.333px;
    left: 23.333px;
    width: 9.333px;
    height: 9.333px;
  }
  #Path_60 {
    fill: rgba(80,102,253,1);
  }
  .Path_60 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 13.333px;
    left: 0px;
    width: 18px;
    height: 26.667px;
  }
  #Path_61 {
    fill: rgba(80,102,253,1);
  }
  .Path_61 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 0px;
    left: 26.667px;
    width: 8px;
    height: 8px;
  }
  #Path_62 {
    fill: rgba(80,102,253,1);
  }
  .Path_62 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 2px;
    left: 20.667px;
    width: 19.333px;
    height: 24.781px;
  }
  #Rectangle_1826 {
    fill: rgba(80,102,253,1);
  }
  .Rectangle_1826 {
    position: absolute;
    overflow: visible;
    width: 1.333px;
    height: 2px;
    left: 30px;
    top: 3.333px;
  }
  #Path_63 {
    fill: rgba(80,102,253,1);
  }
  .Path_63 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 14px;
    left: 6px;
    width: 2.667px;
    height: 2.667px;
  }
  #Stress_free_Lifestyle {
    position: absolute;
    left: 60px;
    top: 11px;
    overflow: visible;
    width: 139px;
    white-space: nowrap;
    line-height: 23px;
    margin-top: -4.5px;
    text-align: left;
    font-family: Inter;
    font-style: normal;
    font-weight: bold;
    font-size: 14px;
    color: rgba(78,78,95,1);
  }
  #Group_79 {
    position: absolute;
    width: 193px;
    height: 40.129px;
    left: 0px;
    top: 194px;
    overflow: visible;
  }
  #ID006___Healthy_Eating {
    position: absolute;
    width: 40px;
    height: 40.129px;
    left: 0px;
    top: 0px;
    overflow: visible;
  }
  #Shape {
    fill: rgba(80,102,253,1);
  }
  .Shape {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 21.347px;
    left: 11.368px;
    width: 19.304px;
    height: 18.782px;
  }
  #Shape_A7_Path_20 {
    fill: rgba(80,102,253,1);
  }
  .Shape_A7_Path_20 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 0.002px;
    left: 32px;
    width: 8px;
    height: 40.005px;
  }
  #Shape_A7_Path_21 {
    fill: rgba(80,102,253,1);
  }
  .Shape_A7_Path_21 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 0.002px;
    left: 0px;
    width: 14.667px;
    height: 40px;
  }
  #Shape_A7_Path_22 {
    fill: rgba(80,102,253,1);
  }
  .Shape_A7_Path_22 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 9.332px;
    left: 20.006px;
    width: 10.66px;
    height: 16.005px;
  }
  #Shape_A7_Path_23 {
    fill: rgba(80,102,253,1);
  }
  .Shape_A7_Path_23 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 0px;
    left: 15.871px;
    width: 8.148px;
    height: 11.718px;
  }
  #Better_eating_habits {
    position: absolute;
    left: 60px;
    top: 12px;
    overflow: visible;
    width: 134px;
    white-space: nowrap;
    line-height: 23px;
    margin-top: -4.5px;
    text-align: left;
    font-family: Inter;
    font-style: normal;
    font-weight: bold;
    font-size: 14px;
    color: rgba(78,78,95,1);
  }
  #Group_78 {
    position: absolute;
    width: 188px;
    height: 42.658px;
    left: 0px;
    top: 131px;
    overflow: visible;
  }
  #astronomy {
    position: absolute;
    width: 40px;
    height: 42.658px;
    left: 0px;
    top: 0px;
    overflow: visible;
  }
  #Path_64 {
    fill: rgba(80,102,253,1);
  }
  .Path_64 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 2.658px;
    left: 0px;
    width: 40px;
    height: 40px;
  }
  #Path_65 {
    fill: rgba(80,102,253,1);
  }
  .Path_65 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 13.579px;
    left: 4.868px;
    width: 13.374px;
    height: 12.799px;
  }
  #Path_66 {
    fill: rgba(80,102,253,1);
  }
  .Path_66 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 0px;
    left: 4.249px;
    width: 7.55px;
    height: 7.499px;
  }
  #Path_67 {
    fill: rgba(80,102,253,1);
  }
  .Path_67 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 4.568px;
    left: 14.051px;
    width: 6.766px;
    height: 6.723px;
  }
  #Quality_sleep_cycle {
    position: absolute;
    left: 60px;
    top: 13px;
    overflow: visible;
    width: 129px;
    white-space: nowrap;
    line-height: 23px;
    margin-top: -4.5px;
    text-align: left;
    font-family: Inter;
    font-style: normal;
    font-weight: bold;
    font-size: 14px;
    color: rgba(78,78,95,1);
  }
  #Group_77 {
    position: absolute;
    width: 158px;
    height: 51.457px;
    left: 0px;
    top: 60px;
    overflow: visible;
  }
  #idea {
    position: absolute;
    width: 40px;
    height: 51.457px;
    left: 0px;
    top: 0px;
    overflow: visible;
  }
  #Path_88 {
    fill: rgba(80,102,253,1);
  }
  .Path_88 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 25.001px;
    left: 14.179px;
    width: 4.514px;
    height: 2.002px;
  }
  #Path_89 {
    fill: rgba(80,102,253,1);
  }
  .Path_89 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 25px;
    left: 22.49px;
    width: 4.514px;
    height: 2.002px;
  }
  #Path_90 {
    fill: rgba(80,102,253,1);
  }
  .Path_90 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 4.719px;
    left: 0.809px;
    width: 39.191px;
    height: 46.738px;
  }
  #Path_91 {
    fill: rgba(80,102,253,1);
  }
  .Path_91 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 0px;
    left: 7.409px;
    width: 1.519px;
    height: 3.399px;
  }
  #Path_92 {
    fill: rgba(80,102,253,1);
  }
  .Path_92 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 2.225px;
    left: 0px;
    width: 2.847px;
    height: 2.849px;
  }
  #Path_93 {
    fill: rgba(80,102,253,1);
  }
  .Path_93 {
    transform: matrix(1,0,0,1,0,0);
    overflow: visible;
    position: absolute;
    top: 2.225px;
    left: 13.491px;
    width: 2.847px;
    height: 2.849px;
  }
  #Sharper_Focus {
    position: absolute;
    left: 60px;
    top: 17px;
    overflow: visible;
    width: 99px;
    white-space: nowrap;
    line-height: 23px;
    margin-top: -4.5px;
    text-align: left;
    font-family: Inter;
    font-style: normal;
    font-weight: bold;
    font-size: 14px;
    color: rgba(78,78,95,1);
  }
  #Advaita_will_be_FREE_forever_w {
    position: absolute;
    left: 53px;
    top: 495px;
    overflow: visible;
    width: 255px;
    white-space: nowrap;
    line-height: 14px;
    margin-top: -1.5px;
    text-align: center;
    font-family: Inter;
    font-style: normal;
    font-weight: normal;
    font-size: 11px;
    color: rgba(78,78,95,1);
  }
    
  button, input[type="submit"], input[type="reset"] {
  background: none;
  color: inherit;
  border: none;
  padding: 0;
  font: inherit;
  cursor: pointer;
  outline: inherit;
}
</style>
<script style="applicationScript">
///////////////////////////////////////
// INITIALIZATION
///////////////////////////////////////

/**
 * Functionality for scaling, showing by media query, and navigation between multiple pages on a single page. 
 * Code subject to change.
 **/

if (window.console==null) { window["console"] = { log : function() {} } }; // some browsers do not set

var Application = function() {
  // event constants
  this.NAVIGATION_CHANGE = "viewChange";
  this.VIEW_NOT_FOUND = "viewNotFound";
  this.STATE_NOT_FOUND = "stateNotFound";
  this.APPLICATION_COMPLETE = "applicationComplete";
  this.SIZE_STATE_NAME = "data-is-view-scaled";

  this.currentQuery = {index: 0, rule: null, mediaText: null, id: null};
  this.inclusionQuery = "(min-width: 0px)";
  this.exclusionQuery = "none and (min-width: 99999px)";
  this.LastModifiedDateLabelName = "LastModifiedDateLabel";
  this.pageRefreshedName = "showPageRefreshedNotification";
  this.prefix = "--web-";
  this.applicationStylesheet = null;
  this.mediaQueryDictionary = {};
  this.statesDictionary = {};
  this.states = [];
  this.views = {};
  this.viewIds = [];
  this.viewQueries = {};
  this.viewScale = 1;
  this.numberOfViews = 0;
  this.verticalPadding = 0;
  this.horizontalPadding = 0;
  this.stateName = null;

  // view settings
  this.showUpdateNotification = false;
  this.showNavigationControls = false;
  this.scaleViewsToFit = false;
  this.scaleToFitOnDoubleClick = false;
  this.actualSizeOnDoubleClick = false;
  this.scaleViewsOnResize = false;
  this.navigationOnKeypress = false;
  this.showViewName = false;
  this.enableDeepLinking = true;
  this.refreshPageForChanges = false;
  this.showRefreshNotifications = true;

  // view controls
  this.scaleViewSlider = null;
  this.lastModifiedLabel = null;
  this.supportsPopState = false; // window.history.pushState!=null;
  this.initialized = false;

  // refresh properties
  this.refreshDuration = 250; // 2000;
  this.lastModifiedDate = null;
  this.refreshRequest = null;
  this.refreshInterval = null;
  this.refreshContent = null;
  this.refreshContentSize = null;
  this.refreshCheckContent = false;
  this.refreshCheckContentSize = false;

  var self = this;

  self.initialize = function(event) {
    var view = self.getVisibleView();
    self.collectViews();
    self.collectMediaQueries();
    self.setViewOptions(view);

    
    // sometimes the body size is 0 so we call this now and again later
    if (self.initialized) {
      window.addEventListener(self.NAVIGATION_CHANGE, self.viewChangeHandler);
      window.addEventListener("keyup", self.keypressHandler);
      window.addEventListener("keypress", self.keypressHandler);
      window.addEventListener("resize", self.resizeHandler);
      window.document.addEventListener("dblclick", self.doubleClickHandler);

      if (self.supportsPopState) {
        window.addEventListener('popstate', self.popStateHandler);
      }
      else {
        window.addEventListener('hashchange', self.hashChangeHandler);
      }

      // we are ready to go
      window.dispatchEvent(new Event(self.APPLICATION_COMPLETE));
    }

    if (self.initialized==false) {
      if (self.showNavigationControls || self.singlePageApplication) {
        self.syncronizeViewToURL();
      }
  
      if (self.refreshPageForChanges) {
        self.setupRefreshForChanges();
      }
  
      self.initialized = true;
    }
    
    if (self.scaleViewsToFit) {
      self.viewScale = self.scaleViewToFit(view);
      
      if (self.viewScale<0) {
        setTimeout(self.scaleViewToFit, 500, view);
      }
    }
    else if (view) {
      self.viewScale = self.getViewScaleValue(view);
      self.updateSliderValue(self.viewScale);
    }
    else {
      // no view found
    }
  
    if (self.showUpdateNotification) {
      self.showNotification();
    }
  
    //"addEventListener" in window ? null : window.addEventListener = window.attachEvent;
    //"addEventListener" in document ? null : document.addEventListener = document.attachEvent;
  }


  ///////////////////////////////////////
  // AUTO REFRESH 
  ///////////////////////////////////////

  self.setupRefreshForChanges = function() {
    self.refreshRequest = new XMLHttpRequest();

    if (!self.refreshRequest) {
      return false;
    }

    // get document start values immediately
    self.requestRefreshUpdate();
  }

  /**
   * Attempt to check the last modified date by the headers 
   * or the last modified property from the byte array 
   * (BETA)
   **/
  self.requestRefreshUpdate = function() {
    var url = document.location.href;
    var protocol = window.location.protocol;
    var method;
    
    try {

      if (self.refreshCheckContentSize) {
        self.refreshRequest.open('HEAD', url, true);
      }
      else if (self.refreshCheckContent) {
        self.refreshContent = document.documentElement.outerHTML;
        self.refreshRequest.open('GET', url, true);
        self.refreshRequest.responseType = "text";
      }
      else {

        // get page last modified date for the first call to compare to later
        if (self.lastModifiedDate==null) {

          // File system does not send headers in FF so get blob if possible
          if (protocol=="file:") {
            self.refreshRequest.open("GET", url, true);
            self.refreshRequest.responseType = "blob";
          }
          else {
            self.refreshRequest.open("HEAD", url, true);
            self.refreshRequest.responseType = "blob";
          }

          self.refreshRequest.onload = self.refreshOnLoadOnceHandler;

          // In some browsers (Chrome & Safari) this error occurs at send: 
          // 
          // Chrome - Access to XMLHttpRequest at 'file:///index.html' from origin 'null' 
          // has been blocked by CORS policy: 
          // Cross origin requests are only supported for protocol schemes: 
          // http, data, chrome, chrome-extension, https.
          // 
          // Safari - XMLHttpRequest cannot load file:///Users/user/Public/index.html. Cross origin requests are only supported for HTTP.
          // 
          // Solution is to run a local server, set local permissions or test in another browser
          self.refreshRequest.send(null);

          // In MS browsers the following behavior occurs possibly due to an AJAX call to check last modified date: 
          // 
          // DOM7011: The code on this page disabled back and forward caching.

        }
        else {
          self.refreshRequest = new XMLHttpRequest();
          self.refreshRequest.onreadystatechange = self.refreshHandler;
          self.refreshRequest.ontimeout = function() {
            console.log("Couldn't find page to check for updates");
          }
          
          var method;
          if (protocol=="file:") {
            method = "GET";
          }
          else {
            method = "HEAD";
          }

          //refreshRequest.open('HEAD', url, true);
          self.refreshRequest.open(method, url, true);
          self.refreshRequest.responseType = "blob";
          self.refreshRequest.send(null);
        }
      }
    }
    catch (error) {
      console.log("Refresh failed for the following reason:")
      console.log(error);
    }
  }

  self.refreshHandler = function() {
    var contentSize;

    try {

      if (self.refreshRequest.readyState === XMLHttpRequest.DONE) {
        
        if (self.refreshRequest.status === 2 || 
          self.refreshRequest.status === 200) {
          var pageChanged = false;

          self.updateLastModifiedLabel();

          if (self.refreshCheckContentSize) {
            var lastModifiedHeader = self.refreshRequest.getResponseHeader("Last-Modified");
            contentSize = self.refreshRequest.getResponseHeader("Content-Length");
            //lastModifiedDate = refreshRequest.getResponseHeader("Last-Modified");
            var headers = self.refreshRequest.getAllResponseHeaders();
            var hasContentHeader = headers.indexOf("Content-Length")!=-1;
            
            if (hasContentHeader) {
              contentSize = self.refreshRequest.getResponseHeader("Content-Length");

              // size has not been set yet
              if (self.refreshContentSize==null) {
                self.refreshContentSize = contentSize;
                // exit and let interval call this method again
                return;
              }

              if (contentSize!=self.refreshContentSize) {
                pageChanged = true;
              }
            }
          }
          else if (self.refreshCheckContent) {

            if (self.refreshRequest.responseText!=self.refreshContent) {
              pageChanged = true;
            }
          }
          else {
            lastModifiedHeader = self.getLastModified(self.refreshRequest);

            if (self.lastModifiedDate!=lastModifiedHeader) {
              pageChanged = true;
            }

          }

          
          if (pageChanged) {
            clearInterval(self.refreshInterval);
            self.refreshUpdatedPage();
            return;
          }

        }
        else {
          console.log('There was a problem with the request.');
        }

      }
    }
    catch( error ) {
      //console.log('Caught Exception: ' + error);
    }
  }

  self.refreshOnLoadOnceHandler = function(event) {

    // get the last modified date
    if (self.refreshRequest.response) {
      self.lastModifiedDate = self.getLastModified(self.refreshRequest);

      if (self.lastModifiedDate!=null) {

        if (self.refreshInterval==null) {
          self.refreshInterval = setInterval(self.requestRefreshUpdate, self.refreshDuration);
        }
      }
      else {
        console.log("Could not get last modified date from the server");
      }
    }
  }

  self.refreshUpdatedPage = function() {
    if (self.showRefreshNotifications) {
      var date = new Date().setTime((new Date().getTime()+10000));
      document.cookie = encodeURIComponent(self.pageRefreshedName) + "=true" + "; max-age=6000;" + " path=/";
    }

    document.location.reload(true);
  }

  self.showNotification = function(duration) {
    var notificationID = self.pageRefreshedName+"ID";
    var notification = document.getElementById(notificationID);
    if (duration==null) duration = 4000;

    if (notification!=null) {return;}

    notification = document.createElement("div");
    notification.id = notificationID;
    notification.textContent = "PAGE UPDATED";
    var styleRule = ""
    styleRule = "position: fixed; padding: 7px 16px 6px 16px; font-family: Arial, sans-serif; font-size: 10px; font-weight: bold; left: 50%;";
    styleRule += "top: 20px; background-color: rgba(0,0,0,.5); border-radius: 12px; color:rgb(235, 235, 235); transition: all 2s linear;";
    styleRule += "transform: translateX(-50%); letter-spacing: .5px; filter: drop-shadow(2px 2px 6px rgba(0, 0, 0, .1))";
    notification.setAttribute("style", styleRule);

    notification.className= "PageRefreshedClass";
    
    document.body.appendChild(notification);

    setTimeout(function() {
      notification.style.opacity = "0";
      notification.style.filter = "drop-shadow( 0px 0px 0px rgba(0,0,0, .5))";
      setTimeout(function() {
        notification.parentNode.removeChild(notification);
      }, duration)
    }, duration);

    document.cookie = encodeURIComponent(self.pageRefreshedName) + "=; max-age=1; path=/";
  }

  /**
   * Get the last modified date from the header 
   * or file object after request has been received
   **/
  self.getLastModified = function(request) {
    var date;

    // file protocol - FILE object with last modified property
    if (request.response && request.response.lastModified) {
      date = request.response.lastModified;
    }
    
    // http protocol - check headers
    if (date==null) {
      date = request.getResponseHeader("Last-Modified");
    }

    return date;
  }

  self.updateLastModifiedLabel = function() {
    var labelValue = "";
    
    if (self.lastModifiedLabel==null) {
      self.lastModifiedLabel = document.getElementById("LastModifiedLabel");
    }

    if (self.lastModifiedLabel) {
      var seconds = parseInt(((new Date().getTime() - Date.parse(document.lastModified)) / 1000 / 60) * 100 + "");
      var minutes = 0;
      var hours = 0;

      if (seconds < 60) {
        seconds = Math.floor(seconds/10)*10;
        labelValue = seconds + " seconds";
      }
      else {
        minutes = parseInt((seconds/60) + "");

        if (minutes>60) {
          hours = parseInt((seconds/60/60) +"");
          labelValue += hours==1 ? " hour" : " hours";
        }
        else {
          labelValue = minutes+"";
          labelValue += minutes==1 ? " minute" : " minutes";
        }
      }
      
      if (seconds<10) {
        labelValue = "Updated now";
      }
      else {
        labelValue = "Updated " + labelValue + " ago";
      }

      if (self.lastModifiedLabel.firstElementChild) {
        self.lastModifiedLabel.firstElementChild.textContent = labelValue;

      }
      else if ("textContent" in self.lastModifiedLabel) {
        self.lastModifiedLabel.textContent = labelValue;
      }
    }
  }

  self.getShortString = function(string, length) {
    if (length==null) length = 30;
    string = string!=null ? string.substr(0, length).replace(/\n/g, "") : "[String is null]";
    return string;
  }

  self.getShortNumber = function(value, places) {
    if (places==null || places<1) places = 3;
    value = Math.round(value * Math.pow(10,places)) / Math.pow(10, places);
    return value;
  }

  ///////////////////////////////////////
  // NAVIGATION CONTROLS
  ///////////////////////////////////////

  self.updateViewLabel = function() {
    var viewNavigationLabel = document.getElementById("ViewNavigationLabel");
    var view = self.getVisibleView();
    var viewIndex = view ? self.getViewIndex(view) : -1;
    var viewName = view ? self.getViewPreferenceValue(view, self.prefix + "view-name") : null;
    var viewId = view ? view.id : null;

    if (viewNavigationLabel && view) {
      if (viewName && viewName.indexOf('"')!=-1) {
        viewName = viewName.replace(/"/g, "");
      }

      if (self.showViewName) {
        viewNavigationLabel.textContent = viewName;
        self.setTooltip(viewNavigationLabel, viewIndex + 1 + " of " + self.numberOfViews);
      }
      else {
        viewNavigationLabel.textContent = viewIndex + 1 + " of " + self.numberOfViews;
        self.setTooltip(viewNavigationLabel, viewName);
      }

    }
  }

  self.updateURL = function(view) {
    view = view == null ? self.getVisibleView() : view;
    var viewId = view ? view.id : null
    var viewFragment = view ? "#"+ viewId : null;

    if (viewId && self.enableDeepLinking) {

      if (self.supportsPopState==false) {
        self.setFragment(viewId);
      }
      else {
        if (viewFragment!=window.location.hash) {

          if (window.location.hash==null) {
            window.history.replaceState({name:viewId}, null, viewFragment);
          }
          else {
            window.history.pushState({name:viewId}, null, viewFragment);
          }
        }
      }
    }
  }

  self.setFragment = function(value) {
    window.location.hash = "#" + value;
  }

  self.setTooltip = function(element, value) {
    // setting the tooltip in edge causes a page crash on hover
    if (/Edge/.test(navigator.userAgent)) { return; }

    if ("title" in element) {
      element.title = value;
    }
  }

  self.getStylesheetRules = function(styleSheet) {
    try {
      if (styleSheet) return styleSheet.cssRules || styleSheet.rules;
  
      return document.styleSheets[0]["cssRules"] || document.styleSheets[0]["rules"];
    }
    catch (error) {
      // Errors happen when script loads before stylesheet or loading an external css locally
      // SecurityError: The operation is insecure.
      // Firefox: InvalidAccessError: A parameter or an operation is not supported by the underlying object
      // Place script after stylesheet
      console.log(error);
    }
  }

  /**
   * If single page application hide all of the views except first
   **/
  self.hideViews = function(selectIndex) {
    var rules = self.getStylesheetRules();
    var queryIndex = 0;
    var numberOfRules = rules!=null ? rules.length : 0;

    // loop through rules and hide media queries except selected
    for (var i=0;i<numberOfRules;i++) {
      var rule = rules[i];

      if (rule.media!=null) {

        if (queryIndex==selectIndex) {
          self.currentQuery.mediaText = rule.conditionText;
          self.currentQuery.index = selectIndex;
          self.currentQuery.rule = rule;
          self.enableMediaQuery(rule);
        }
        else {
          self.disableMediaQuery(rule);
        }
        
        queryIndex++;
      }
    }

    self.numberOfViews = queryIndex;
    self.updateViewLabel();
    self.updateURL();

    self.dispatchViewChange();

    var view = self.getVisibleView();
    var viewIndex = view ? self.getViewIndex(view) : -1;

    return viewIndex==selectIndex ? view : null;
  }

  self.showView = function(view) {
    var id = view ? view.id : null;
    var query = id ? self.mediaQueryDictionary[id] : null;
    var display = null;

    if (query) {
      self.enableMediaQuery(query);
      if (view==null) view =self.getVisibleView();
      self.setViewOptions(view);
    }
    else if (id) {
      display = window.getComputedStyle(view).getPropertyValue("display");
      if (display=="" ||  display=="none") {
        view.style.display = "block";
      }
    }
  }

  self.setViewOptions = function(view) {

    if (view) {
      self.scaleViewsToFit = self.getViewPreferenceBoolean(view, self.prefix + "scale-to-fit");
      self.scaleToFitOnDoubleClick = self.getViewPreferenceBoolean(view, self.prefix + "scale-on-double-click");
      self.actualSizeOnDoubleClick = self.getViewPreferenceBoolean(view, self.prefix + "actual-size-on-double-click");
      self.scaleViewsOnResize = self.getViewPreferenceBoolean(view, self.prefix + "scale-on-resize");
      self.enableScaleUp = self.getViewPreferenceBoolean(view, self.prefix + "enable-scale-up");
      self.navigationOnKeypress = self.getViewPreferenceBoolean(view, self.prefix + "navigate-on-keypress");
      self.showViewName = self.getViewPreferenceBoolean(view, self.prefix + "show-view-name");
      self.refreshPageForChanges = self.getViewPreferenceBoolean(view, self.prefix + "refresh-for-changes");
      self.showNavigationControls = self.getViewPreferenceBoolean(view, self.prefix + "show-navigation-controls");
      self.scaleViewSlider = self.getViewPreferenceBoolean(view, self.prefix + "show-scale-controls");
      self.enableDeepLinking = self.getViewPreferenceBoolean(view, self.prefix + "enable-deep-linking");
      self.singlePageApplication = self.getViewPreferenceBoolean(view, self.prefix + "application");
      self.showUpdateNotification = document.cookie!="" ? document.cookie.indexOf(self.pageRefreshedName)!=-1 : false;

      if (self.scaleViewsToFit) {
        var newScaleValue = self.scaleViewToFit(view);
        
        if (newScaleValue<0) {
          setTimeout(self.scaleViewToFit, 500, view);
        }
      }
      else {
        self.viewScale = self.getViewScaleValue(view);
        self.updateSliderValue(self.viewScale);
      }
    }
  }

  self.previousView = function(event) {
    var rules = self.getStylesheetRules();
    var view = self.getVisibleView()
    var index = view ? self.getViewIndex(view) : -1;
    var prevQueryIndex = index!=-1 ? index-1 : self.currentQuery.index-1;
    var queryIndex = 0;
    var numberOfRules = rules!=null ? rules.length : 0;

    if (event) {
      event.stopImmediatePropagation();
    }

    if (prevQueryIndex<0) {
      return;
    }

    // loop through rules and hide media queries except selected
    for (var i=0;i<numberOfRules;i++) {
      var rule = rules[i];
      
      if (rule.media!=null) {

        if (queryIndex==prevQueryIndex) {
          self.currentQuery.mediaText = rule.conditionText;
          self.currentQuery.index = prevQueryIndex;
          self.currentQuery.rule = rule;
          self.enableMediaQuery(rule);
          self.updateViewLabel();
          self.updateURL();
          self.dispatchViewChange();
        }
        else {
          self.disableMediaQuery(rule);
        }

        queryIndex++;
      }
    }
  }

  self.nextView = function(event) {
    var rules = self.getStylesheetRules();
    var view = self.getVisibleView();
    var index = view ? self.getViewIndex(view) : -1;
    var nextQueryIndex = index!=-1 ? index+1 : self.currentQuery.index+1;
    var queryIndex = 0;
    var numberOfRules = rules!=null ? rules.length : 0;
    var numberOfMediaQueries = self.getNumberOfMediaRules();

    if (event) {
      event.stopImmediatePropagation();
    }

    if (nextQueryIndex>=numberOfMediaQueries) {
      return;
    }

    // loop through rules and hide media queries except selected
    for (var i=0;i<numberOfRules;i++) {
      var rule = rules[i];
      
      if (rule.media!=null) {

        if (queryIndex==nextQueryIndex) {
          self.currentQuery.mediaText = rule.conditionText;
          self.currentQuery.index = nextQueryIndex;
          self.currentQuery.rule = rule;
          self.enableMediaQuery(rule);
          self.updateViewLabel();
          self.updateURL();
          self.dispatchViewChange();
        }
        else {
          self.disableMediaQuery(rule);
        }

        queryIndex++;
      }
    }
  }

  self.enableMediaQuery = function(rule) {

    try {
      rule.media.mediaText = self.inclusionQuery;
    }
    catch(error) {
      //self.log(error);
      rule.conditionText = self.inclusionQuery;
    }
  }

  self.disableMediaQuery = function(rule) {

    try {
      rule.media.mediaText = self.exclusionQuery;
    }
    catch(error) {
      rule.conditionText = self.exclusionQuery;
    }
  }

  self.dispatchViewChange = function() {
    try {
      var event = new Event(self.NAVIGATION_CHANGE);
      window.dispatchEvent(event);
    }
    catch (error) {
      // In IE 11: Object doesn't support this action
    }
  }

  self.getNumberOfMediaRules = function() {
    var rules = self.getStylesheetRules();
    var numberOfRules = rules ? rules.length : 0;
    var numberOfQueries = 0;

    for (var i=0;i<numberOfRules;i++) {
      if (rules[i].media!=null) { numberOfQueries++; }
    }
    return numberOfQueries;
  }

  /////////////////////////////////////////
  // VIEW SCALE 
  /////////////////////////////////////////

  self.sliderChangeHandler = function(event) {
    var value = event.currentTarget.value/100;
    var view = self.getVisibleView();
    self.setViewScaleValue(view, value, false, true);
  }

  self.updateSliderValue = function(scale) {
    var slider = document.getElementById("ViewZoomSliderInput");
    var tooltip = parseInt(scale * 100 + "") + "%";
    var inputType;
    
    if (slider) {
      slider["value"] = scale * 100;
      inputType = slider.getAttributeNS(null, "type");

      if (inputType!="range") {
        // input range is not supported
        slider.style.display = "none";
      }

      self.setTooltip(slider, tooltip);
    }
  }

  self.viewChangeHandler = function(event) {
    var view = self.getVisibleView();
    var matrix = view ? getComputedStyle(view).transform : null;
    
    if (matrix) {
      self.viewScale = self.getViewScaleValue(view);
      
      var scaleNeededToFit = self.getViewFitToViewportScale(view);
      var isViewLargerThanViewport = scaleNeededToFit<1;
      
      // scale large view to fit if scale to fit is enabled
      //if (isViewLargerThanViewport && scaleViewsToFit) {
      if (self.scaleViewsToFit) {
        //setViewScaleValue(view, scale, true);
        self.scaleViewToFit(view);
      }
      else {
        self.updateSliderValue(self.viewScale);
      }
    }
  }

  self.getViewScaleValue = function(view) {
    var matrix = getComputedStyle(view).transform;

    if (matrix) {
      var matrixArray = matrix.replace("matrix(", "").split(",");
      var scaleX = parseFloat(matrixArray[0]);
      var scaleY = parseFloat(matrixArray[3]);
      var scale = Math.min(scaleX, scaleY);
    }

    return scale;
  }

  self.getViewTranslateYValue = function(view) {
    var matrix = getComputedStyle(view).transform;

    if (matrix) {
      var matrixArray = matrix.replace("matrix(", "").split(",");
      var translateY = parseFloat(matrixArray[5]);
    }

    return translateY;
  }

  self.getViewTop = function(view) {
    var top = getComputedStyle(view).top;

    return top;
  }

  self.setViewScaleValue = function(view, desiredScale, scaleToFit, centerVertically) {
    var transform = getComputedStyle(view).transform;
    var scaleNeededToFit = self.getViewFitToViewportScale(view, self.enableScaleUp);
    var isViewLargerThanViewport = scaleNeededToFit<1;
    var shrunkToFit = false;
    
    if (scaleToFit && (isViewLargerThanViewport || self.enableScaleUp)) {
      desiredScale = scaleNeededToFit;
      shrunkToFit = true;
    }

    if (isNaN(desiredScale)) {
      desiredScale = 1;
    }

    desiredScale = self.getShortNumber(desiredScale);

    self.updateSliderValue(desiredScale);

    transform = self.getCSSPropertyValueForElement(view.id, "transform");

    if (transform!=null) {
      var horizontalCenter = transform.indexOf("translateX")!=-1;
      var verticalCenter = transform.indexOf("translateY")!=-1;
      var horizontalAndVerticalCenter = (horizontalCenter && verticalCenter) || (transform.indexOf("translate(")!=-1);
      var topPosition = null;
      var leftPosition = null;
      var translateY = null;
      var translateX = "-50%";
      var centerForNavigation = self.showNavigationControls!=null && self.scaleViewsToFit;

      //if (horizontalAndVerticalCenter || horizontalCenter || verticalCenter) {
      if (horizontalAndVerticalCenter || centerForNavigation) {
        translateX = "-50%";

        // if view is smaller than viewport or center vertically is true then center vertically
        if (shrunkToFit || centerVertically) {
          translateX = "-50%";
          translateY = "-50%";
          topPosition = "50%";
          leftPosition = "50%";
        }
        else {
          translateX = "0";
          translateY = "0";
          topPosition = "0";
          leftPosition = "0";
        }
        
        view.style.transform = "translateX(" + translateX + ") translateY(" + translateY + ") scale(" + desiredScale + ")";

        if (view.style.top != topPosition) {
          view.style.top = topPosition + "";
        }

        if (view.style.left != leftPosition) {
          view.style.left = leftPosition + "";
        }
        //view.style.transform = "translate(-50%,-50%) scale(" + desiredScale + ")";
      }
      else if (horizontalCenter) {
        translateY = shrunkToFit ? "-50%" : "0%";
        view.style.transform = "translateY(" + translateY + ") translateX(-50%) scale(" + desiredScale + ")";

        // this next function needs work
        //topPosition = getVerticallyCenteredTopValue(view);

        if (shrunkToFit) {
          view.style.top = "50%";
        }
        else {
          view.style.top = "0";
        }
      }
      else if (verticalCenter) {
        view.style.transform = "translateY(-50%) scale(" + desiredScale + ")";
      }
      else {
        view.style.transform = "scale(" + desiredScale + ")";
      }

      if (desiredScale!=1) {
        // attempt to anchor to the top as scaled up
        //view.style.top = null;
      }
    }

    if (shrunkToFit) {
      return scaleNeededToFit;
    }

    return desiredScale;
  }

  self.getVerticallyCenteredTopValue = function(view) {
    var originalTransform = view.style.transform;
    var originalTop = view.style.top;
    var transform = null;

    view.style.transform = "translateY(-50%)" + originalTransform;
    view.style.top = "50%";
    var translateY = self.getViewTranslateYValue(view);
    view.style.transform = originalTransform;
    view.style.top = originalTop;
    return translateY;
  }

  self.getViewFitToViewportScale = function(view, scaleUp) {
    var enableScaleUp = scaleUp;
    var availableWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
    var availableHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
    var elementWidth = parseFloat(getComputedStyle(view, "style").width);
    var elementHeight = parseFloat(getComputedStyle(view, "style").height);
    var newScale = 1;

    availableWidth -= self.horizontalPadding;
    availableHeight -= self.verticalPadding;

    if (enableScaleUp) {
      newScale = Math.min(availableHeight/elementHeight, availableWidth/elementWidth);
    }
    else if (elementWidth > availableWidth || elementHeight > availableHeight) {
      newScale = Math.min(availableHeight/elementHeight, availableWidth/elementWidth);
    }
    
    return newScale;
  }

  self.keypressHandler = function(event) {
    var rightKey = 39;
    var leftKey = 37;
    
    // listen for both events 
    if (event.type=="keypress") {
      window.removeEventListener("keyup", self.keypressHandler);
    }
    else {
      window.removeEventListener("keypress", self.keypressHandler);
    }
    
    if (self.showNavigationControls) {
      if (self.navigationOnKeypress) {
        if (event.keyCode==rightKey) {
          self.nextView();
        }
        if (event.keyCode==leftKey) {
          self.previousView();
        }
      }
    }
    else if (self.navigationOnKeypress) {
      if (event.keyCode==rightKey) {
        self.nextView();
      }
      if (event.keyCode==leftKey) {
        self.previousView();
      }
    }
  }

  ///////////////////////////////////
  // GENERAL FUNCTIONS
  ///////////////////////////////////

  self.getViewById = function(id) {
    id = id ? id.replace("#", "") : "";
    var view = self.viewIds.indexOf(id)!=-1 && document.getElementById(id);
    return view;
  }

  self.getViewIds = function() {
    var viewIds = self.getViewPreferenceValue(document.body, self.prefix + "view-ids");
    var viewId = null;

    viewIds = viewIds!=null && viewIds!="" ? viewIds.split(",") : [];

    if (viewIds.length==0) {
      viewId = self.getViewPreferenceValue(document.body, self.prefix + "view-id");
      viewIds = viewId ? [viewId] : [];
    }

    return viewIds;
  }

  self.getApplicationStylesheet = function() {
    var stylesheetId = self.getViewPreferenceValue(document.body, self.prefix + "stylesheet-id");
    self.applicationStylesheet = document.getElementById("applicationStylesheet");
    return self.applicationStylesheet.sheet;
  }

  self.getViewQueries = function() {
    var stylesheetId = self.getViewPreferenceValue(document.body, self.prefix + "stylesheet-id");
    var viewIds = self.getViewIds();
  }

  self.getVisibleView = function() {
    var viewIds = self.getViewIds();

    try {
      //var rules = self.getStylesheetRules();
      //var styleSheet = self.getApplicationStylesheet();

      /*
      viewIds = rules[1].selectorText.split(/\,?\s+?#/);
      if (viewIds[0]=="*") {
        viewIds = rules[2].selectorText.split(/\,?\s+?#/);
      }
      */
    }
    catch(error) {
      console.log("For the page functionality to work the first two style declarations must be the generated ones.");
      return;
    }
    
    for (var i=0;i<viewIds.length;i++) {
      var viewId = viewIds[i].replace(/[\#?\.?](.*)/, "$" + "1");
      var view = document.getElementById(viewId);
      var postName = "_Class";

      if (view==null && viewId && viewId.lastIndexOf(postName)!=-1) {
        view = document.getElementById(viewId.replace(postName, ""));
      }
      
      if (view) {
        var display = window.getComputedStyle(view).display;
    
        if (display=="block") {
          return view;
        }
      }
    }

    return null;
  }

  self.getViewIndex = function(view) {
    var viewIds = self.getViewIds();
    var id = view ? view.id : null;
    var index = id && viewIds ? viewIds.indexOf(id) : -1;

    return index;
  }

  self.syncronizeViewToURL = function() {
    var fragment = window.location.hash;
    var view = self.getViewById(fragment);
    var index = view ? self.getViewIndex(view) : 0;
    if (index==-1) index = 0;
    var currentView = self.hideViews(index);

    if (self.supportsPopState && currentView) {

      if (fragment==null) {
        window.history.replaceState({name:currentView.id}, null, "#"+ currentView.id);
      }
      else {
        window.history.pushState({name:currentView.id}, null, "#"+ currentView.id);
      }
    }
    return view;
  }

  self.getViewPreferenceBoolean = function(view, property) {
    var value = window.getComputedStyle(view).getPropertyValue(property);
    var type = typeof value;
    
    if (value=="true" || (type=="string" && value.indexOf("true")!=-1)) {
      return true;
    }

    return false;
  }

  self.getViewPreferenceValue = function(view, property) {
    var value = window.getComputedStyle(view).getPropertyValue(property);

    if (value===undefined) {
      return null;
    }
    
    value = value.replace(/^[\s\"]*/, "");
    value = value.replace(/[\s\"]*$/, "");
    value = value.replace(/^[\s"]*(.*?)[\s"]*$/, function (match, capture) { 
      return capture;
    });

    return value;
  }

  self.getCSSPropertyValueForElement = function(id, property) {
    var styleSheets = document.styleSheets;
    var numOfStylesheets = styleSheets.length;
    var values = [];
    var selectorIDText = "#" + id;
    var selectorClassText = "." + id + "_Class";
    var value;

    for(var i=0;i<numOfStylesheets;i++) {
      var styleSheet = styleSheets[i];
      var cssRules = self.getStylesheetRules(styleSheet);
      var numOfCSSRules = cssRules.length;
      var cssRule;
      
      for (var j=0;j<numOfCSSRules;j++) {
        cssRule = cssRules[j];
        
        if (cssRule.media) {
          var mediaRules = cssRule.cssRules;
          var numOfMediaRules = mediaRules ? mediaRules.length : 0;
          
          for(var k=0;k<numOfMediaRules;k++) {
            var mediaRule = mediaRules[k];
            
            if (mediaRule.selectorText==selectorIDText || mediaRule.selectorText==selectorClassText) {
              
              if (mediaRule.style && property in mediaRule.style) {
                value = mediaRule.style.getPropertyValue(property);
                //console.log(property+":" + value);
                values.push(value);
              }
            }
          }
        }
        else {

          if (cssRule.selectorText==selectorIDText || cssRule.selectorText==selectorClassText) {
            if (cssRule.style && property in cssRule.style) {
              value = cssRule.style.getPropertyValue(property);
              //console.log(property+":" + value);
              values.push(value);
            }
          }
        }
      }
    }
    
    return values.pop();
  }

  self.collectViews = function() {
    var viewIds = self.getViewIds();

    for (let index = 0; index < viewIds.length; index++) {
      const id = viewIds[index];
      const view = self.getViewById(id);
      self.views[id] = view;
    }
    
    self.viewIds = viewIds;
  }

  self.collectMediaQueries = function() {
    var viewIds = self.getViewIds();
    var styleSheet = self.getApplicationStylesheet();
    var cssRules = self.getStylesheetRules(styleSheet);
    var numOfCSSRules = cssRules ? cssRules.length : 0;
    var cssRule;
    var id = null;
    var selectorIDText = "#" + id;
    var selectorClassText = "." + id + "_Class";
    
    for (var j=0;j<numOfCSSRules;j++) {
      cssRule = cssRules[j];
      
      if (cssRule.media) {
        var mediaRules = cssRule.cssRules;
        var numOfMediaRules = mediaRules ? mediaRules.length : 0;
        
        for(var k=0;k<numOfMediaRules;k++) {
          var mediaRule = mediaRules[k];
          var mediaId = null;

          if (k<2) {
            mediaId = mediaRule.selectorText.replace(/[#|\s|*]?/g, "");
            
            if (viewIds.indexOf(mediaId)!=-1) {
              self.mediaQueryDictionary[mediaId] = cssRule;
              self.addState(mediaId, cssRule);
              break;
            }
          }
          else {
            break;
          }
        }
      }
      else {

        if (cssRule.selectorText==selectorIDText || cssRule.selectorText==selectorClassText) {
          continue;
        }
      }
    }
  }

  self.addState = function(name, cssRule) {
    var state = {name:name, rule:cssRule};
    self.states.push(name);
    self.statesDictionary[name] = state;
  }

  self.hasState = function(name) {
    
    if (self.states.indexOf(name)!=-1) {
      return true;
    }
    return false;
  }

  self.goToState = function(name, maintainPreviousState) {
    var state = self.statesDictionary[name];

    if (state) {
      if (maintainPreviousState==false || maintainPreviousState==null) {
        self.hideViews();
      }
      self.enableMediaQuery(state.rule);
      self.updateViewLabel();
      self.updateURL();
    }
    else {
      var event = new Event(self.STATE_NOT_FOUND);
      self.stateName = name;
      window.dispatchEvent(event);
    }
  }

  self.resizeHandler = function(event) {
    if (self.scaleViewsOnResize) {
      var view = self.getVisibleView();
      self.scaleViewToFit(view);
    }
  }

  self.preventDoubleClick = function(event) {
    event.stopImmediatePropagation();
  }

  self.hashChangeHandler = function(event) {
    var fragment = window.location.hash ? window.location.hash.replace("#", "") : "";
    var view = self.getViewById(fragment);

    if (view) {
      self.hideViews();
      self.showView(view);
      self.updateViewLabel();
    }
    else {
      window.dispatchEvent(new Event(self.VIEW_NOT_FOUND));
    }
  }

  self.popStateHandler = function(event) {
    var state = event.state;
    var fragment = state ? state.name : window.location.hash;
    var view = self.getViewById(fragment);

    if (view) {
      self.hideViews();
      self.showView(view);
      self.updateViewLabel();
    }
    else {
      window.dispatchEvent(new Event(self.VIEW_NOT_FOUND));
    }
  }

  self.doubleClickHandler = function(event) {
    var view = self.getVisibleView();
    var scaleValue = view ? self.getViewScaleValue(view) : 1;
    var scaleNeededToFit = view ? self.getViewFitToViewportScale(view) : 1;

    // Three scenarios
    // - scale to fit on double click
    // - set scale to actual size on double click
    // - switch between scale to fit and actual page size

    // if scale and actual size enabled then switch between
    if (self.scaleToFitOnDoubleClick && self.actualSizeOnDoubleClick) {
      var isViewScaled = view.getAttributeNS(null, self.SIZE_STATE_NAME);
      var isScaled = false;
      
      // if scale is not 1 then view needs scaling
      if (scaleNeededToFit!=1) {

        // if current scale is at 1 it is at actual size
        // scale it to fit
        if (scaleValue==1) {
          self.scaleViewToFit(view);
          isScaled = true;
        }
        else {
          // scale is not at 1 so switch to actual size
          self.scaleViewToActualSize(view);
          isScaled = false;
        }
      }
      else {
        // view is smaller than viewport 
        // so scale to fit() is scale actual size
        // actual size and scaled size are the same
        // but call scale to fit to retain centering
        self.scaleViewToFit(view);
        isScaled = false;
      }
      
      view.setAttributeNS(null, self.SIZE_STATE_NAME, isScaled+"");
      isViewScaled = view.getAttributeNS(null, self.SIZE_STATE_NAME);
    }
    else if (self.scaleToFitOnDoubleClick) {
      self.scaleViewToFit(view);
    }
    else if (self.actualSizeOnDoubleClick) {
      self.scaleViewToActualSize(view);
    }

  }

  self.scaleViewToFit = function(view) {
    return self.setViewScaleValue(view, 1, true, true);
  }

  self.scaleViewToActualSize = function(view) {
    self.setViewScaleValue(view, 1);
  }

  self.onloadHandler = function(event) {
    self.initialize();
  }

  self.getStackArray = function(error) {
    var value = "";
    
    if (error==null) {
      try {
       error = new Error("Stack");
      }
      catch (e) {
       
      }
    }
    
    if ("stack" in error) {
      value = error.stack;
      var methods = value.match(/\\n/gm);
   
      var newArray = methods ? methods.map(function (value, index, array) {
       value = value.replace("at ","");
       return value;
      }) : null;
   
      if (newArray && newArray[0]=="getStackTrace") {
       newArray.shift();
      }
      if (newArray && newArray[0]=="getStackArray") {
       newArray.shift();
      }
      if (newArray && newArray[0]=="getFunctionName") {
       newArray.shift();
      }
      if (newArray && newArray[0]=="object") {
       newArray.shift();
      }
      if (newArray && newArray[0]=="log") {
       newArray.shift();
      }
   
      return newArray;
    }
    
    return null;
  }

  this.log = function(value) {
    console.log.apply(this, [value]);
  }
  
  // initialize on load
  // sometimes the body size is 0 so we call this now and again later
  window.addEventListener("load", self.onloadHandler);
  window.document.addEventListener("DOMContentLoaded", self.onloadHandler);
}

var application = new Application();
window.application = application;
</script>
</head>
<body>
<div id="Android_Mobile___26">
  <div id="Group_72">
    <svg class="Ellipse_15">
      <ellipse id="Ellipse_15" rx="220.93359375" ry="84.3004379272461" cx="220.93359375" cy="84.3004379272461">
      </ellipse>
    </svg>
    <svg class="Ellipse_34">
      <ellipse id="Ellipse_34" rx="251.63787841796875" ry="107.08433532714844" cx="251.63787841796875" cy="107.08433532714844">
      </ellipse>
    </svg>
    <div id="Group_43">
      <div id="Group_35">
        <div id="Group_32">
          <svg class="Path_44" viewBox="0 0 54.771 54.771">
            <path id="Path_44" d="M 27.3857421875 0 C 42.51046752929688 0 54.771484375 12.26101589202881 54.771484375 27.3857421875 C 54.771484375 42.51046752929688 42.51046752929688 54.771484375 27.3857421875 54.771484375 C 12.26101589202881 54.771484375 0 42.51046752929688 0 27.3857421875 C 0 12.26101589202881 12.26101589202881 0 27.3857421875 0 Z">
            </path>
          </svg>
          <svg class="Path_42" viewBox="6716.634 -229.152 5.942 2.648">
            <path id="Path_42" d="M 6716.671875 -229.1523895263672 C 6716.46240234375 -228.3163146972656 6717.11962890625 -226.7884979248047 6718.93896484375 -226.5432434082031 C 6720.7578125 -226.2980194091797 6722.26953125 -227.258544921875 6722.576171875 -228.3008422851563">
            </path>
          </svg>
          <svg class="Path_43" viewBox="6716.635 -229.152 5.942 2.648">
            <path id="Path_43" d="M 6722.5390625 -229.1523895263672 C 6722.74853515625 -228.3163146972656 6722.0908203125 -226.7884979248047 6720.27197265625 -226.5432434082031 C 6718.453125 -226.2980194091797 6716.94091796875 -227.258544921875 6716.634765625 -228.3008422851563">
            </path>
          </svg>
          <svg class="Path_41" viewBox="6716.443 -228.992 19.384 3.247">
            <path id="Path_41" d="M 6735.8271484375 -228.9920959472656 C 6735.8271484375 -228.9920959472656 6733.2294921875 -225.7452087402344 6726.38671875 -225.7452087402344 C 6719.5439453125 -225.7452087402344 6716.443359375 -228.9920959472656 6716.443359375 -228.9920959472656">
            </path>
          </svg>
        </div>
      </div>
      <svg class="Subtraction_5" viewBox="-7753.162 -341.947 52.597 16.718">
        <path id="Subtraction_5" d="M -7726.86328125 -325.2290344238281 C -7735.09521484375 -325.2290344238281 -7742.8564453125 -328.0272216796875 -7748.7177734375 -333.1081237792969 C -7750.73583984375 -335.7750854492188 -7752.23095703125 -338.7489013671875 -7753.162109375 -341.9471435546875 C -7747.40869140625 -333.9832458496094 -7737.578125 -329.2281799316406 -7726.86328125 -329.2281799316406 C -7716.14990234375 -329.2281799316406 -7706.318359375 -333.9829406738281 -7700.56494140625 -341.9471435546875 C -7701.49560546875 -338.74755859375 -7702.99169921875 -335.7739868164063 -7705.0087890625 -333.1082153320313 C -7710.8701171875 -328.0271911621094 -7718.63134765625 -325.2290344238281 -7726.86328125 -325.2290344238281 Z M -7741.064453125 -326.1932373046875 C -7743.68701171875 -327.7845153808594 -7746.01318359375 -329.79638671875 -7747.97802734375 -332.1729431152344 C -7746.0498046875 -329.845458984375 -7743.65966796875 -327.77783203125 -7741.0634765625 -326.1949462890625 L -7741.064453125 -326.1932373046875 Z">
        </path>
      </svg>
      <svg class="Union_2" viewBox="-7758 -384.003 8.442 5.157">
        <path id="Union_2" d="M -7752.6318359375 -380.3651428222656 C -7752.87451171875 -379.9642028808594 -7753.31494140625 -379.6962890625 -7753.81787109375 -379.6962890625 C -7754.30859375 -379.6962890625 -7754.73974609375 -379.9510803222656 -7754.986328125 -380.3356323242188 L -7758 -378.84619140625 L -7758 -384.003173828125 C -7758 -384.003173828125 -7756.0556640625 -382.7397766113281 -7754.837890625 -382.0214233398438 C -7754.5849609375 -382.2965698242188 -7754.2216796875 -382.4689636230469 -7753.81787109375 -382.4689636230469 C -7753.39990234375 -382.4689636230469 -7753.025390625 -382.2839660644531 -7752.77099609375 -381.9913330078125 C -7751.5576171875 -382.7038269042969 -7749.55810546875 -384.003173828125 -7749.55810546875 -384.003173828125 L -7749.55810546875 -378.84619140625 L -7752.6318359375 -380.3651428222656 Z">
        </path>
      </svg>
    </div>
    <div id="Group_36">
      <div id="Group_33">
        <svg class="Path_44_A7_Path_5" viewBox="0 0 48.963 48.963">
          <path id="Path_44_A7_Path_5" d="M 24.4814453125 0 C 38.00217437744141 0 48.962890625 10.96071720123291 48.962890625 24.4814453125 C 48.962890625 38.00217437744141 38.00217437744141 48.962890625 24.4814453125 48.962890625 C 10.96071720123291 48.962890625 0 38.00217437744141 0 24.4814453125 C 0 10.96071720123291 10.96071720123291 0 24.4814453125 0 Z">
          </path>
        </svg>
        <svg class="Path_42_A7_Path_6" viewBox="6716.634 -229.152 5.312 2.367">
          <path id="Path_42_A7_Path_6" d="M 6716.66748046875 -229.1523895263672 C 6716.47998046875 -228.4049835205078 6717.06787109375 -227.0391998291016 6718.6943359375 -226.8199462890625 C 6720.3203125 -226.6007232666016 6721.67138671875 -227.4593963623047 6721.94580078125 -228.3911437988281">
          </path>
        </svg>
        <svg class="Path_43_A7_Path_7" viewBox="6716.634 -229.152 5.312 2.367">
          <path id="Path_43_A7_Path_7" d="M 6721.91259765625 -229.1523895263672 C 6722.099609375 -228.4049835205078 6721.51220703125 -227.0391998291016 6719.88623046875 -226.8199462890625 C 6718.259765625 -226.6007232666016 6716.90771484375 -227.4593963623047 6716.63427734375 -228.3911437988281">
          </path>
        </svg>
        <svg class="Path_41_A7_Path_8" viewBox="6716.443 -228.992 17.328 2.903">
          <path id="Path_41_A7_Path_8" d="M 6733.77099609375 -228.9920806884766 C 6733.77099609375 -228.9920806884766 6731.44921875 -226.0895385742188 6725.33203125 -226.0895385742188 C 6719.21533203125 -226.0895385742188 6716.443359375 -228.9920806884766 6716.443359375 -228.9920806884766">
          </path>
        </svg>
      </div>
    </div>
    <div id="Group_34">
      <svg class="Ellipse_14">
        <ellipse id="Ellipse_14" rx="36" ry="36" cx="36" cy="36">
        </ellipse>
      </svg>
      <svg class="Path_30" viewBox="6716.634 -229.152 7.811 3.481">
        <path id="Path_30" d="M 6716.68359375 -229.1523895263672 C 6716.408203125 -228.0533294677734 6717.2724609375 -226.044921875 6719.6640625 -225.7225341796875 C 6722.0546875 -225.4001617431641 6724.0419921875 -226.6628265380859 6724.4453125 -228.0329742431641">
        </path>
      </svg>
      <svg class="Path_32" viewBox="6716.635 -229.152 7.811 3.481">
        <path id="Path_32" d="M 6724.396484375 -229.1523895263672 C 6724.671875 -228.0533294677734 6723.80712890625 -226.044921875 6721.416015625 -225.7225341796875 C 6719.025390625 -225.4001617431641 6717.03759765625 -226.6628265380859 6716.634765625 -228.0329742431641">
        </path>
      </svg>
      <svg class="Path_36" viewBox="6716.443 -228.992 25.481 4.268">
        <path id="Path_36" d="M 6741.9248046875 -228.9920959472656 C 6741.9248046875 -228.9920959472656 6738.509765625 -224.7238922119141 6729.5146484375 -224.7238922119141 C 6720.51953125 -224.7238922119141 6716.443359375 -228.9920959472656 6716.443359375 -228.9920959472656">
        </path>
      </svg>
    </div>
    <div id="Group_40">
      <svg class="Ellipse_16">
        <ellipse id="Ellipse_16" rx="1" ry="1" cx="1" cy="1">
        </ellipse>
      </svg>
      <svg class="Ellipse_17">
        <ellipse id="Ellipse_17" rx="1" ry="1" cx="1" cy="1">
        </ellipse>
      </svg>
      <svg class="Ellipse_18">
        <ellipse id="Ellipse_18" rx="1" ry="1" cx="1" cy="1">
        </ellipse>
      </svg>
      <svg class="Ellipse_20">
        <ellipse id="Ellipse_20" rx="1" ry="1" cx="1" cy="1">
        </ellipse>
      </svg>
      <svg class="Ellipse_21">
        <ellipse id="Ellipse_21" rx="1" ry="1" cx="1" cy="1">
        </ellipse>
      </svg>
      <svg class="Ellipse_22">
        <ellipse id="Ellipse_22" rx="1" ry="1" cx="1" cy="1">
        </ellipse>
      </svg>
      <svg class="Ellipse_23">
        <ellipse id="Ellipse_23" rx="1" ry="1" cx="1" cy="1">
        </ellipse>
      </svg>
      <svg class="Ellipse_24">
        <ellipse id="Ellipse_24" rx="1" ry="1" cx="1" cy="1">
        </ellipse>
      </svg>
      <svg class="Ellipse_25">
        <ellipse id="Ellipse_25" rx="1" ry="1" cx="1" cy="1">
        </ellipse>
      </svg>
      <svg class="Ellipse_26">
        <ellipse id="Ellipse_26" rx="1" ry="1" cx="1" cy="1">
        </ellipse>
      </svg>
      <svg class="Ellipse_27">
        <ellipse id="Ellipse_27" rx="1" ry="1" cx="1" cy="1">
        </ellipse>
      </svg>
      <svg class="Ellipse_28">
        <ellipse id="Ellipse_28" rx="1" ry="1" cx="1" cy="1">
        </ellipse>
      </svg>
      <svg class="Ellipse_29">
        <ellipse id="Ellipse_29" rx="1" ry="1" cx="1" cy="1">
        </ellipse>
      </svg>
      <svg class="Ellipse_30">
        <ellipse id="Ellipse_30" rx="1" ry="1" cx="1" cy="1">
        </ellipse>
      </svg>
      <svg class="Ellipse_31">
        <ellipse id="Ellipse_31" rx="1" ry="1" cx="1" cy="1">
        </ellipse>
      </svg>
      <svg class="Ellipse_32">
        <ellipse id="Ellipse_32" rx="1" ry="1" cx="1" cy="1">
        </ellipse>
      </svg>
    </div>
  </div>
  <div id="Group_97">
    <svg class="Rectangle_1824">
      <rect id="Rectangle_1824" rx="22.5" ry="22.5" x="0" y="0" width="172" height="45">
      </rect>
    </svg>
    <svg class="Rectangle_1821">
      <rect id="Rectangle_1821" rx="22.5" ry="22.5" x="0" y="0" width="172" height="45">
      </rect>
    </svg>
    <div id="Join_Advaita">
      <button><span>Join RideX</span></button>
    </div>
  </div>
  <div id="Join_Advaita_and_enjoy">
    <span>Join </span><span style="font-style:normal;font-weight:bold;">Advaita </span><span>and enjoy</span>
  </div>
  <div id="Username_or_Email">
    <span>Already a member of Ridex?</span><span style="color:rgba(80,102,253,1);"> </span><span style="font-style:normal;font-weight:normal;color:rgba(80,102,253,1);"><a href="#">Login</a></span>
  </div>
  <div id="Group_80">
    <div id="Group_76">
      <div id="dance">
        <div id="Group_75">
          <div id="Group_74">
            <svg class="Path_57" viewBox="32 136 8 8">
              <path id="Path_57" d="M 36.00000381469727 144 C 38.20916366577148 144 40 142.2091674804688 40 140.0000152587891 C 40 137.7908325195313 38.20916366577148 136 36.00000381469727 136 C 33.79083251953125 136 32 137.7908325195313 32 140.0000152587891 C 32.00216674804688 142.2082366943359 33.79175186157227 143.9978485107422 36.00000381469727 144 Z M 36.00000381469727 137.3333587646484 C 37.47275161743164 137.3333587646484 38.66666793823242 138.5272521972656 38.66666793823242 140.0000152587891 C 38.66666793823242 141.4727630615234 37.47275161743164 142.6666870117188 36.00000381469727 142.6666870117188 C 34.52724838256836 142.6666870117188 33.33333206176758 141.4727630615234 33.33333206176758 140.0000152587891 C 33.33333206176758 138.5272521972656 34.52724838256836 137.3333587646484 36.00000381469727 137.3333587646484 Z">
              </path>
            </svg>
            <svg class="Path_58" viewBox="56 0 9.333 9.333">
              <path id="Path_58" d="M 56.66666793823242 5.333332061767578 C 58.50667572021484 5.335497856140137 59.99783706665039 6.826664924621582 60.00000762939453 8.666664123535156 C 60.00000762939453 9.034831047058105 60.29850006103516 9.333330154418945 60.66667175292969 9.333330154418945 C 61.03483963012695 9.333330154418945 61.33333969116211 9.034831047058105 61.33333969116211 8.666664123535156 C 61.33551025390625 6.826664924621582 62.82667541503906 5.335497856140137 64.66666412353516 5.333332061767578 C 65.03484344482422 5.333332061767578 65.33334350585938 5.034831523895264 65.33334350585938 4.666665077209473 C 65.33334350585938 4.29849910736084 65.03484344482422 3.999998807907104 64.66666412353516 3.999998807907104 C 62.82667541503906 3.997832059860229 61.33551025390625 2.506665945053101 61.33333969116211 0.6666665077209473 C 61.33333969116211 0.2984999120235443 61.03483963012695 0 60.66667175292969 0 C 60.29850006103516 0 60.00000762939453 0.2984999120235443 60.00000762939453 0.6666665077209473 C 59.99783706665039 2.506665945053101 58.50667572021484 3.997832059860229 56.66666793823242 3.999998807907104 C 56.29850387573242 3.999998807907104 56.00000762939453 4.29849910736084 56.00000762939453 4.666665077209473 C 56.00000762939453 5.034831523895264 56.29850387573242 5.333332061767578 56.66666793823242 5.333332061767578 Z M 60.66667175292969 3.066665649414063 C 61.06209182739258 3.722082138061523 61.61125564575195 4.271248340606689 62.26667022705078 4.666665077209473 C 61.61125564575195 5.062081813812256 61.06209182739258 5.61124849319458 60.66667175292969 6.266663551330566 C 60.27125549316406 5.61124849319458 59.72209167480469 5.062081813812256 59.06667709350586 4.666664600372314 C 59.72209167480469 4.271248340606689 60.27125549316406 3.722082138061523 60.66667175292969 3.066665649414063 Z">
              </path>
            </svg>
            <svg class="Path_59" viewBox="280 352 9.333 9.333">
              <path id="Path_59" d="M 288.6666870117188 356.0000305175781 C 286.82666015625 355.9978637695313 285.33544921875 354.5066833496094 285.3333129882813 352.6666564941406 C 285.3333129882813 352.2985534667969 285.0347900390625 352 284.6666259765625 352 C 284.2984619140625 352 284 352.2985534667969 284 352.6666564941406 C 283.997802734375 354.5066833496094 282.5066528320313 355.9978637695313 280.6666259765625 356.0000305175781 C 280.2985229492188 356.0000305175781 279.9999694824219 356.2985229492188 279.9999694824219 356.6667175292969 C 279.9999694824219 357.0348815917969 280.2985229492188 357.3333435058594 280.6666259765625 357.3333435058594 C 282.5066528320313 357.3355407714844 283.997802734375 358.82666015625 284 360.6667175292969 C 284 361.0348815917969 284.2984619140625 361.3333435058594 284.6666259765625 361.3333435058594 C 285.0347900390625 361.3333435058594 285.3333129882813 361.0348815917969 285.3333129882813 360.6667175292969 C 285.33544921875 358.82666015625 286.82666015625 357.3355407714844 288.6666870117188 357.3333435058594 C 289.0348510742188 357.3333435058594 289.3333129882813 357.0348815917969 289.3333129882813 356.6667175292969 C 289.3333129882813 356.2985229492188 289.0348510742188 356.0000305175781 288.6666870117188 356.0000305175781 Z M 284.6666259765625 358.2666931152344 C 284.271240234375 357.6112670898438 283.7221069335938 357.0621032714844 283.0667114257813 356.6667175292969 C 283.7221069335938 356.2713012695313 284.271240234375 355.7221374511719 284.6666259765625 355.0667114257813 C 285.0621032714844 355.7221374511719 285.6112060546875 356.2713012695313 286.2666625976563 356.6667175292969 C 285.6112060546875 357.0621032714844 285.0621032714844 357.6112670898438 284.6666259765625 358.2666931152344 Z">
              </path>
            </svg>
            <svg class="Path_60" viewBox="0 160 18 26.667">
              <path id="Path_60" d="M 15.99999523162842 160 C 14.89541053771973 160 13.9999942779541 160.8954467773438 13.9999942779541 162.0000305175781 L 13.9999942779541 164.6666564941406 L 10.66666412353516 164.6666564941406 L 10.66666412353516 166.0000305175781 L 14.66666316986084 166.0000305175781 C 15.03482818603516 166.0000305175781 15.33332824707031 165.7015075683594 15.33332824707031 165.3333435058594 L 15.33332824707031 162.0000305175781 C 15.33332824707031 161.6318359375 15.63182830810547 161.3333129882813 15.99999523162842 161.3333129882813 C 16.36816024780273 161.3333129882813 16.66666030883789 161.6318359375 16.66666030883789 162.0000305175781 L 16.66666030883789 166.6666564941406 C 16.66666030883789 167.0348510742188 16.36816024780273 167.3333435058594 15.99999523162842 167.3333435058594 L 10.66666412353516 167.3333435058594 C 10.29849624633789 167.3333435058594 9.999997138977051 167.6318359375 9.999997138977051 168 L 9.999997138977051 171.3333435058594 C 9.999997138977051 171.5101928710938 10.07033061981201 171.6796875 10.19533061981201 171.8046569824219 L 13.80466270446777 175.4140014648438 C 13.92983150482178 175.5391845703125 14.00016117095947 175.7090454101563 13.9999942779541 175.8860168457031 L 13.9999942779541 182 C 13.9999942779541 182.3681640625 13.70149612426758 182.6666870117188 13.33332920074463 182.6666870117188 C 12.965163230896 182.6666870117188 12.66666412353516 182.3681640625 12.66666412353516 182 L 12.66666412353516 176.6666564941406 C 12.66666412353516 176.4898681640625 12.5963306427002 176.3203430175781 12.47132968902588 176.1953735351563 L 9.80466365814209 173.5286560058594 C 9.544330596923828 173.2684326171875 9.122330665588379 173.2684326171875 8.861998558044434 173.5286560058594 L 6.861998558044434 175.5286865234375 C 6.601747512817383 175.7890014648438 6.601747512817383 176.2110290527344 6.861998558044434 176.4713439941406 L 8.471330642700195 178.0806579589844 C 8.596497535705566 178.2058410644531 8.666831016540527 178.3756713867188 8.666665077209473 178.5526428222656 L 8.666665077209473 184.6666564941406 C 8.666665077209473 185.0348205566406 8.3681640625 185.3333435058594 7.999997615814209 185.3333435058594 C 7.631832122802734 185.3333435058594 7.333332061767578 185.0348205566406 7.333332061767578 184.6666564941406 L 7.333332061767578 179.3333435058594 C 7.333332061767578 179.1565246582031 7.262999057769775 178.9869995117188 7.137998580932617 178.8619995117188 L 4.195332527160645 175.9193420410156 C 4.07016658782959 175.794189453125 3.999832630157471 175.6243286132813 3.999998807907104 175.4473266601563 L 3.999998807907104 173.3333435058594 L 5.333332061767578 173.3333435058594 C 6.437915325164795 173.3333435058594 7.33333158493042 172.4379272460938 7.33333158493042 171.3333435058594 C 7.33333158493042 170.228759765625 6.437915325164795 169.3333129882813 5.333332061767578 169.3333129882813 L 3.999998807907104 169.3333129882813 L 3.999998807907104 167.3333435058594 L 2.666666030883789 167.3333435058594 L 2.666666030883789 170 C 2.666666030883789 170.3681640625 2.965165853500366 170.6666870117188 3.333332300186157 170.6666870117188 L 5.333332061767578 170.6666870117188 C 5.701498031616211 170.6666870117188 5.999998092651367 170.9652099609375 5.999998092651367 171.3333435058594 C 5.999998092651367 171.7015075683594 5.701498031616211 172.0000305175781 5.333332061767578 172.0000305175781 L 1.999999403953552 172.0000305175781 C 1.631832838058472 172.0000305175781 1.333333015441895 171.7015075683594 1.333333015441895 171.3333435058594 L 1.333333015441895 166.6666564941406 C 1.333333015441895 166.2985229492188 1.631832838058472 166.0000305175781 1.999999403953552 166.0000305175781 L 1.999999403953552 164.6666564941406 C 0.8954163789749146 164.6666564941406 0 165.5621032714844 0 166.6666564941406 L 0 171.3333435058594 C 0 172.4379272460938 0.8954163789749146 173.3333435058594 1.999999403953552 173.3333435058594 L 2.666666030883789 173.3333435058594 L 2.666666030883789 175.4473266601563 C 2.665332555770874 175.9781494140625 2.876332521438599 176.4875793457031 3.252666234970093 176.8620300292969 L 5.999998092651367 179.6093444824219 L 5.999998092651367 184.6666564941406 C 5.999998092651367 185.7712707519531 6.895415306091309 186.6666870117188 7.999997615814209 186.6666870117188 C 9.104579925537109 186.6666870117188 9.999997138977051 185.7712707519531 9.999997138977051 184.6666564941406 L 9.999997138977051 178.5526428222656 C 10.00166320800781 178.0217590332031 9.790663719177246 177.5122680664063 9.413997650146484 177.1380004882813 L 8.275997161865234 176 L 9.333330154418945 174.9426879882813 L 11.33333015441895 176.9426879882813 L 11.33333015441895 182 C 11.33333015441895 183.1045837402344 12.22874546051025 183.9999694824219 13.33332920074463 183.9999694824219 C 14.43791103363037 183.9999694824219 15.33332824707031 183.1045837402344 15.33332824707031 182 L 15.33332824707031 175.8860168457031 C 15.33499622344971 175.3550720214844 15.12399768829346 174.8455810546875 14.74732971191406 174.4713439941406 L 11.33333015441895 171.0573120117188 L 11.33333015441895 168.6666870117188 L 15.99999523162842 168.6666870117188 C 17.10457801818848 168.6666870117188 17.9999942779541 167.771240234375 17.9999942779541 166.6666564941406 L 17.9999942779541 162.0000305175781 C 17.9999942779541 160.8954467773438 17.10457801818848 160 15.99999523162842 160 Z">
              </path>
            </svg>
            <svg class="Path_61" viewBox="320 0 8 8">
              <path id="Path_61" d="M 324.0000610351563 7.999997615814209 C 326.2091674804688 7.999997615814209 328 6.209165096282959 328 3.999998807907104 C 328 1.790832757949829 326.2091674804688 2.033633279552305e-07 324.0000610351563 2.033633279552305e-07 C 321.7908935546875 2.033633279552305e-07 320 1.790832757949829 320 3.999998807907104 C 320.0022583007813 6.208248138427734 321.7918090820313 7.997830867767334 324.0000610351563 7.999997615814209 Z M 324.0000610351563 1.333333134651184 C 325.4727783203125 1.333333134651184 326.6666870117188 2.527249097824097 326.6666870117188 3.999998807907104 C 326.6666870117188 5.472748279571533 325.4727783203125 6.666664600372314 324.0000610351563 6.666664600372314 C 322.5272216796875 6.666664600372314 321.3333129882813 5.472748279571533 321.3333129882813 3.999998807907104 C 321.3333129882813 2.527249097824097 322.5272216796875 1.333333134651184 324.0000610351563 1.333333134651184 Z">
              </path>
            </svg>
            <svg class="Path_62" viewBox="248 24 19.333 24.781">
              <path id="Path_62" d="M 265.333251953125 28.66666793823242 L 261.3333129882813 28.66666793823242 L 261.3333129882813 30.00000190734863 L 265.333251953125 30.00000190734863 C 265.701416015625 30.00000190734863 265.9999694824219 30.29850578308105 265.9999694824219 30.66666221618652 L 265.9999694824219 34.66666030883789 C 265.9999694824219 35.03483200073242 265.701416015625 35.33332824707031 265.333251953125 35.33332824707031 C 264.965087890625 35.33332824707031 264.6666259765625 35.03483200073242 264.6666259765625 34.66666030883789 L 264.6666259765625 32 C 264.6666259765625 31.63183212280273 264.3681335449219 31.33333587646484 263.9999694824219 31.33333587646484 L 261.3333129882813 31.33333587646484 C 260.9651184082031 31.33333587646484 260.6665954589844 31.63183212280273 260.6665954589844 32 L 260.6665954589844 39.44732666015625 C 260.6667785644531 39.62432861328125 260.5964660644531 39.79416656494141 260.4712829589844 39.9193229675293 L 258.1953125 42.19532775878906 C 257.9350280761719 42.45566177368164 257.9350280761719 42.87766265869141 258.1953125 43.13799285888672 L 261.2526245117188 46.1953239440918 C 261.5129089355469 46.45565795898438 261.5129089355469 46.87765502929688 261.2526245117188 47.13798904418945 L 261.1379699707031 47.25199127197266 C 260.8776245117188 47.51223754882813 260.4556274414063 47.51223754882813 260.1953125 47.25199127197266 L 256.0806579589844 43.13733291625977 C 255.8203735351563 42.87699890136719 255.8203735351563 42.45499038696289 256.0806579589844 42.19466018676758 L 257.8046264648438 40.47066497802734 C 258.0648498535156 40.21033477783203 258.0648498535156 39.78832626342773 257.8046264648438 39.52799224853516 L 255.8046264648438 37.52799987792969 C 255.5443115234375 37.26774215698242 255.1222839355469 37.26774215698242 254.8619384765625 37.52799987792969 L 252.1952819824219 40.19466400146484 C 252.0701141357422 40.31982421875 251.9997711181641 40.48966217041016 251.9999389648438 40.66666412353516 L 251.9999389648438 45.99999618530273 C 251.9999389648438 46.3681640625 251.7014312744141 46.66665649414063 251.3332672119141 46.66665649414063 C 250.9651184082031 46.66665649414063 250.6665802001953 46.3681640625 250.6665802001953 45.99999618530273 L 250.6665802001953 39.88599395751953 C 250.6664428710938 39.70899200439453 250.7368011474609 39.53916549682617 250.8619384765625 39.41399383544922 L 254.4712829589844 35.80466461181641 C 254.5963134765625 35.67966461181641 254.6666259765625 35.51016235351563 254.6666259765625 35.33332824707031 L 254.6666259765625 32 C 254.6666259765625 31.63183212280273 254.3681030273438 31.33333587646484 253.9999694824219 31.33333587646484 L 249.9999389648438 31.33333587646484 C 249.6317749023438 31.33333587646484 249.3333129882813 31.03483009338379 249.3333129882813 30.66666221618652 L 249.3333129882813 26.0000057220459 C 249.3333129882813 25.6318359375 249.6317749023438 25.33333778381348 249.9999389648438 25.33333778381348 C 250.3681030273438 25.33333778381348 250.6665802001953 25.6318359375 250.6665802001953 26.0000057220459 L 250.6665802001953 29.33333778381348 C 250.6665802001953 29.70150184631348 250.9651184082031 30.00000190734863 251.3332672119141 30.00000190734863 L 253.9999694824219 30.00000190734863 L 253.9999694824219 28.66666793823242 L 251.9999389648438 28.66666793823242 L 251.9999389648438 26.0000057220459 C 251.9999389648438 24.89542198181152 251.1045227050781 24.00000381469727 249.9999389648438 24.00000381469727 C 248.8953399658203 24.00000381469727 247.9999542236328 24.89542198181152 247.9999542236328 26.0000057220459 L 247.9999542236328 30.66666221618652 C 247.9999542236328 31.7712516784668 248.8953399658203 32.66666412353516 249.9999389648438 32.66666412353516 L 253.3332824707031 32.66666412353516 L 253.3332824707031 35.05733108520508 L 249.9192810058594 38.47133636474609 C 249.5429382324219 38.84574508666992 249.3319549560547 39.35515975952148 249.3333129882813 39.88599395751953 L 249.3333129882813 45.99999618530273 C 249.3333129882813 47.10457229614258 250.2286987304688 47.99999237060547 251.3332672119141 47.99999237060547 C 252.4378814697266 47.99999237060547 253.3332824707031 47.10457229614258 253.3332824707031 45.99999618530273 L 253.3332824707031 40.94265365600586 L 255.3333129882813 38.94266128540039 L 256.390625 39.99999237060547 L 255.1379547119141 41.25199508666992 C 254.3568725585938 42.03299331665039 254.3567047119141 43.2993278503418 255.1377105712891 44.08041381835938 C 255.1377868652344 44.08049011230469 255.1378784179688 44.0805778503418 255.1379547119141 44.08065795898438 L 259.2526245117188 48.1953239440918 C 260.0336608886719 48.97607421875 261.2996520996094 48.97607421875 262.0806274414063 48.1953239440918 L 262.1952819824219 48.08132553100586 C 262.9764099121094 47.30031967163086 262.9765319824219 46.03399276733398 262.195556640625 45.25291442871094 C 262.1954650878906 45.25282287597656 262.1954040527344 45.25273895263672 262.1952819824219 45.25265502929688 L 259.6093139648438 42.66666030883789 L 261.4140014648438 40.86199188232422 C 261.7906188964844 40.48774337768555 262.0016479492188 39.97824859619141 261.9999694824219 39.44732666015625 L 261.9999694824219 32.66666412353516 L 263.3332824707031 32.66666412353516 L 263.3332824707031 34.66666030883789 C 263.3332824707031 35.77124404907227 264.2286682128906 36.66666412353516 265.333251953125 36.66666412353516 C 266.4378356933594 36.66666412353516 267.3333129882813 35.77124404907227 267.3333129882813 34.66666030883789 L 267.3333129882813 30.66666221618652 C 267.3333129882813 29.56208610534668 266.4378356933594 28.66666793823242 265.333251953125 28.66666793823242 Z">
              </path>
            </svg>
            <svg class="Rectangle_1826">
              <rect id="Rectangle_1826" rx="0" ry="0" x="0" y="0" width="1.333" height="2">
              </rect>
            </svg>
            <svg class="Path_63" viewBox="72 168 2.667 2.667">
              <path id="Path_63" d="M 74.66667938232422 170.0000305175781 L 74.66667938232422 168.0000457763672 L 73.33333587646484 168.0000457763672 L 73.33333587646484 169.3333740234375 L 72.00001525878906 169.3333740234375 L 72.00001525878906 170.6666870117188 L 74 170.6666870117188 C 74.3681640625 170.6666870117188 74.66667938232422 170.3682098388672 74.66667938232422 170.0000305175781 Z">
              </path>
            </svg>
          </div>
        </div>
      </div>
      <div id="Stress_free_Lifestyle">
        <span>Stress-free Lifestyle</span>
      </div>
    </div>
    <div id="Group_79">
      <div id="ID006___Healthy_Eating">
        <svg class="Shape" viewBox="17.052 33.018 19.304 18.782">
          <path id="Shape" d="M 35.21719360351563 37.45916366577148 C 34.68386459350586 37.5525016784668 30.37722206115723 38.31916427612305 28.39056396484375 40.04582214355469 C 28.26349830627441 39.48952865600586 28.071044921875 38.95022583007813 27.81723403930664 38.43915939331055 C 26.28391075134277 35.35918807983398 19.45727920532227 33.10586547851563 19.15061187744141 33.03919982910156 C 18.81150436401367 32.95095825195313 18.46196365356445 33.14028930664063 18.35061645507813 33.4725227355957 C 18.25728607177734 33.77252197265625 16.06396484375 40.80582427978516 17.59062194824219 43.89247131347656 C 19.03061866760254 46.78579330444336 22.25726699829102 48.35244750976563 25.15057945251465 47.1524543762207 C 25.67464065551758 48.44890213012695 26.08941650390625 49.78689193725586 26.39057350158691 51.15243148803711 C 26.40162086486816 51.52062606811523 26.70905113220215 51.81013870239258 27.07723999023438 51.79909896850586 C 27.44542503356934 51.78805160522461 27.73494529724121 51.48062133789063 27.72390174865723 51.11244201660156 C 27.95041847229004 49.91361236572266 28.40289878845215 48.76882934570313 29.05722618103027 47.73911285400391 C 31.27054786682129 49.01910400390625 34.03720092773438 48.14577865600586 35.50385284423828 46.05912780761719 C 36.97051620483398 43.97246932983398 36.12385177612305 38.59917068481445 36.01051712036133 37.99917221069336 C 35.97995376586914 37.82078170776367 35.878173828125 37.66249465942383 35.72855758666992 37.5606575012207 C 35.57894515991211 37.45882034301758 35.39435577392578 37.42219161987305 35.21719360351563 37.45917510986328 Z M 18.75728607177734 43.29914093017578 C 17.79729080200195 41.35914993286133 18.75728607177734 36.79917526245117 19.4239501953125 34.52584838867188 C 21.55060386657715 35.30585479736328 25.68391418457031 37.11249923706055 26.6239070892334 39.00582885742188 C 27.73056602478027 41.21916198730469 27.29056930541992 43.78580474853516 25.73724746704102 45.185791015625 C 25.03217887878418 43.64193344116211 24.15315246582031 42.18361282348633 23.11726379394531 40.83914947509766 C 22.9648323059082 40.65575790405273 22.72613334655762 40.5676155090332 22.49109268188477 40.60792922973633 C 22.25605201721191 40.64824295043945 22.06037712097168 40.81088256835938 21.9777660369873 41.03459167480469 C 21.89515686035156 41.25830078125 21.93816947937012 41.50909042358398 22.09060096740723 41.69248199462891 C 23.08247375488281 42.99658203125 23.92129516601563 44.41028594970703 24.59058570861816 45.90579223632813 C 22.39060020446777 46.83245468139648 19.89060974121094 45.57245635986328 18.75728607177734 43.29914093017578 Z M 27.06390380859375 48.6324462890625 C 26.82390785217285 47.87244415283203 26.55724143981934 47.16577911376953 26.29057693481445 46.50578308105469 C 26.61633682250977 46.25449371337891 26.91365432739258 45.96834945678711 27.1772403717041 45.65246200561523 C 27.36666488647461 46.12079620361328 27.63751602172852 46.5518798828125 27.97723770141602 46.92579650878906 C 27.63181686401367 47.46252059936523 27.3265438079834 48.0240364074707 27.06390953063965 48.60578155517578 Z M 34.39719772338867 45.29912948608398 C 33.41764450073242 46.83327865600586 31.45264625549316 47.4036750793457 29.80389022827148 46.63245391845703 C 30.46795082092285 45.74701690673828 31.21342468261719 44.9256591796875 32.03054428100586 44.17913818359375 C 32.31036376953125 43.93981552124023 32.34320068359375 43.51895904541016 32.10387802124023 43.2391357421875 C 31.86455726623535 42.95932006835938 31.44370651245117 42.92648315429688 31.16388511657715 43.16580963134766 C 30.28734970092773 43.95448684692383 29.4881649017334 44.82510375976563 28.77723121643066 45.76579284667969 C 28.3998908996582 45.23431396484375 28.1866512298584 44.6038703918457 28.16390037536621 43.95247268676758 C 28.39409828186035 43.33623123168945 28.53115844726563 42.68913269042969 28.57056617736816 42.03247833251953 C 28.66154861450195 41.82615661621094 28.77322959899902 41.62959289550781 28.90390014648438 41.44581604003906 C 29.7972297668457 40.17249298095703 33.01720809936523 39.2791633605957 34.79719543457031 38.90583038330078 C 35.01719665527344 40.69248962402344 35.28385925292969 44.01913070678711 34.38386535644531 45.29245758056641 Z">
          </path>
        </svg>
        <svg class="Shape_A7_Path_20" viewBox="48 1 8 40.005">
          <path id="Shape_A7_Path_20" d="M 49.99999237060547 1 C 48.89542770385742 1 48 1.895428776741028 48 2.99998950958252 L 48 38.33313369750977 C 47.99912643432617 39.06359481811523 48.29794311523438 39.76244354248047 48.82666015625 40.26646041870117 C 49.61322784423828 41.01811599731445 50.77753829956055 41.21656799316406 51.7686882019043 40.76791000366211 C 52.75983810424805 40.31925201416016 53.37903594970703 39.31346893310547 53.33330535888672 38.22647094726563 L 53.33330535888672 24.9998722076416 C 53.33180618286133 24.05341911315918 53.99394607543945 23.23548316955566 54.91996383666992 23.03988456726074 C 55.55610275268555 22.9168872833252 56.01173782348633 22.35437393188477 55.99995803833008 21.70655822753906 L 55.99995803833008 6.999971866607666 C 55.99995803833008 3.686282157897949 53.31367111206055 1.000003814697266 49.99999237060547 1.000003814697266 Z M 54.66662979125977 21.73988914489746 C 54.18381500244141 21.83675003051758 53.72845458984375 22.03938484191895 53.33330535888672 22.33321952819824 L 53.33330535888672 20.33323097229004 C 53.33330535888672 19.96504211425781 53.03482818603516 19.66656684875488 52.66664505004883 19.66656684875488 C 52.29845428466797 19.66656684875488 51.99998092651367 19.96504211425781 51.99998092651367 20.33323097229004 L 51.99998092651367 38.22647094726563 C 52.04696655273438 38.77975845336914 51.74613189697266 39.30425643920898 51.24481201171875 39.54304885864258 C 50.74349975585938 39.78184127807617 50.14666748046875 39.6849365234375 49.74665451049805 39.2998046875 C 49.4822998046875 39.04779052734375 49.33289337158203 38.6983642578125 49.33332443237305 38.33313369750977 L 49.33332443237305 2.999991893768311 C 49.33332443237305 2.6318039894104 49.63179779052734 2.333328485488892 49.99999237060547 2.333328485488892 C 52.57730102539063 2.333328485488892 54.66662979125977 4.422657012939453 54.66662979125977 6.99997091293335 L 54.66662979125977 21.73988914489746 Z">
          </path>
        </svg>
        <svg class="Shape_A7_Path_21" viewBox="0 1 14.667 40">
          <path id="Shape_A7_Path_21" d="M 14.66658878326416 15.03325653076172 L 14.66658878326416 2.99998950958252 C 14.66658878326416 1.895428776741028 13.77116203308105 1 12.66660022735596 1 C 11.56203842163086 1 10.66661167144775 1.895428776741028 10.66661167144775 2.99998950958252 L 10.66661167144775 12.33327102661133 C 10.66282653808594 12.60168933868408 10.49841785430908 12.84165096282959 10.24947547912598 12.94210243225098 C 10.0005350112915 13.04255104064941 9.715630531311035 12.98389148712158 9.526620864868164 12.79327011108398 C 9.40059757232666 12.6737813949585 9.330464363098145 12.50691318511963 9.33328914642334 12.33327102661133 L 9.33328914642334 2.99998950958252 C 9.33328914642334 1.895428776741028 8.437859535217285 1 7.333298683166504 1 C 6.228739261627197 1 5.333310604095459 1.895428776741028 5.333310604095459 2.99998950958252 L 5.333310604095459 12.33327102661133 C 5.329524993896484 12.60168933868408 5.165116310119629 12.84165096282959 4.91617488861084 12.94210243225098 C 4.667232513427734 13.04255104064941 4.382327556610107 12.98389148712158 4.193317890167236 12.79327011108398 C 4.067294120788574 12.6737813949585 3.997161626815796 12.50691318511963 3.999985933303833 12.33327102661133 L 3.999985933303833 2.99998950958252 C 3.999985933303833 1.895428776741028 3.104557275772095 1 1.999996781349182 1 C 0.8954360485076904 1 7.487456514354562e-06 1.895428776741028 7.487456514354562e-06 2.99998950958252 L 7.487456514354562e-06 15.03325653076172 C -0.0008300814661197364 18.05492782592773 1.851837277412415 20.76776695251465 4.666649341583252 21.86655426025391 L 4.666649341583252 38.33313369750977 C 4.666649341583252 39.80588531494141 5.860549449920654 40.99978637695313 7.333301067352295 40.99978637695313 C 8.80605411529541 40.99978637695313 9.99995231628418 39.80588531494141 9.99995231628418 38.33313369750977 L 9.99995231628418 21.85321998596191 C 12.81882476806641 20.76704025268555 14.67515468597412 18.05414009094238 14.66659355163574 15.03325653076172 Z M 8.666622161865234 38.33313369750977 C 8.666622161865234 39.06951141357422 8.069672584533691 39.66645812988281 7.333296298980713 39.66645812988281 C 6.596920490264893 39.66645812988281 5.999969959259033 39.06951141357422 5.999969959259033 38.33313369750977 L 5.999969959259033 22.23988723754883 C 6.199969291687012 22.27988815307617 6.399967670440674 22.30655288696289 6.599966049194336 22.33321952819824 C 6.968154430389404 22.37003707885742 7.296476364135742 22.10141181945801 7.333296298980713 21.73322105407715 C 7.370116710662842 21.36503219604492 7.101487159729004 21.03671073913574 6.733299732208252 20.99989318847656 C 3.668636322021484 20.69188117980957 1.335001826286316 18.11335182189941 1.333328485488892 15.03325653076172 L 1.333328485488892 2.99998950958252 C 1.333328485488892 2.631801128387451 1.631803274154663 2.33332633972168 1.999991416931152 2.33332633972168 C 2.368179559707642 2.33332633972168 2.666654825210571 2.631801128387451 2.666654825210571 2.99998950958252 L 2.666654825210571 12.33327102661133 C 2.667112350463867 12.86025905609131 2.875545263290405 13.36577224731445 3.246651649475098 13.73993301391602 C 3.817123174667358 14.31510066986084 4.678216934204102 14.48933506011963 5.427413463592529 14.18118000030518 C 6.176609516143799 13.87302875518799 6.665925979614258 13.14336776733398 6.666632175445557 12.33327102661133 L 6.666632175445557 2.99998950958252 C 6.666632175445557 2.631801128387451 6.965107917785645 2.33332633972168 7.333296298980713 2.33332633972168 C 7.701484203338623 2.33332633972168 7.999958992004395 2.631801128387451 7.999958992004395 2.99998950958252 L 7.999958992004395 12.33327102661133 C 8.00041675567627 12.86025905609131 8.208850860595703 13.36577224731445 8.5799560546875 13.73993301391602 C 9.150426864624023 14.31510066986084 10.0115213394165 14.48933506011963 10.76071643829346 14.18118000030518 C 11.50991153717041 13.87302875518799 11.99922943115234 13.14336776733398 11.99993705749512 12.33327102661133 L 11.99993705749512 2.99998950958252 C 11.99993705749512 2.631801128387451 12.29841327667236 2.33332633972168 12.66660022735596 2.33332633972168 C 13.03478622436523 2.33332633972168 13.33326244354248 2.631801128387451 13.33326244354248 2.99998950958252 L 13.33326244354248 15.03325653076172 C 13.33628845214844 16.6248950958252 12.70255470275879 18.15161323547363 11.57327270507813 19.27323532104492 C 10.33327960968018 20.51989364624023 9.14661979675293 20.66656112670898 8.906620979309082 20.90656089782715 C 8.666623115539551 21.14655876159668 8.666623115539551 20.43322944641113 8.666623115539551 38.33313369750977 Z">
          </path>
        </svg>
        <svg class="Shape_A7_Path_22" viewBox="30.01 14.996 10.66 16.005">
          <path id="Shape_A7_Path_22" d="M 30.17658996582031 22.01850700378418 C 29.50992965698242 24.93182563781738 30.88325500488281 27.91181182861328 33.54991149902344 28.76513671875 C 33.48324203491211 29.25180053710938 33.42325210571289 29.75846672058105 33.38991546630859 30.28512954711914 C 33.36312103271484 30.65120315551758 33.63728332519531 30.97006988525391 34.00323867797852 30.99845314025879 C 34.18014907836914 31.01128005981445 34.35488128662109 30.95306396484375 34.48874664306641 30.83670806884766 C 34.62262725830078 30.72034645080566 34.70461654663086 30.55542945861816 34.71656799316406 30.37846183776855 C 34.71656799316406 29.89846229553223 34.80323791503906 29.43180084228516 34.86989974975586 28.99180030822754 C 37.58988952636719 29.07846450805664 39.93653869628906 26.92514419555664 40.56986236572266 24.18515777587891 C 41.27652740478516 21.16517639160156 38.02987289428711 15.89853954315186 37.66321563720703 15.31187438964844 C 37.56857681274414 15.15869903564453 37.41600036621094 15.05032157897949 37.24020767211914 15.01139640808105 C 37.06440734863281 14.97247123718262 36.88034820556641 15.00630760192871 36.72989273071289 15.1052074432373 C 36.13655853271484 15.49853992462158 30.8765869140625 18.99852561950684 30.17658996582031 22.01850318908691 Z M 36.88989639282227 16.61186790466309 C 37.93655014038086 18.42519187927246 39.70320510864258 22.0118408203125 39.26987457275391 23.88516616821289 C 38.76321411132813 26.07848930358887 36.98323059082031 27.62514495849609 35.09656524658203 27.66514015197754 C 35.31740951538086 26.61408233642578 35.62056732177734 25.5820198059082 36.00322723388672 24.57848930358887 C 36.11028289794922 24.35485649108887 36.08437728881836 24.09029579162598 35.93598937988281 23.89167022705078 C 35.78760528564453 23.69304084777832 35.54124450683594 23.59316825866699 35.29644012451172 23.63239288330078 C 35.05162811279297 23.67161750793457 34.84880828857422 23.84345245361328 34.76990509033203 24.07849311828613 C 34.35826873779297 25.16059112548828 34.03935241699219 26.27570343017578 33.81658172607422 27.41180801391602 C 31.81658554077148 26.65181350708008 31.02326202392578 24.38515663146973 31.50991821289063 22.30517196655273 C 31.91658782958984 20.43851470947266 35.12990570068359 17.84519577026367 36.88989639282227 16.61186790466309 Z">
          </path>
        </svg>
        <svg class="Shape_A7_Path_23" viewBox="23.807 0.997 8.148 11.718">
          <path id="Shape_A7_Path_23" d="M 27.8222541809082 11.37239646911621 C 27.86225509643555 11.61906147003174 27.90891647338867 11.87239265441895 27.94225311279297 12.13239192962646 C 27.99195861816406 12.50057888031006 28.33073043823242 12.75875949859619 28.69892120361328 12.70905590057373 C 29.06710815429688 12.65935039520264 29.32528305053711 12.32057952880859 29.27558135986328 11.952392578125 C 29.27558135986328 11.70572566986084 29.20224761962891 11.46572780609131 29.16224670410156 11.22572898864746 C 31.32223892211914 10.59239959716797 32.32889938354492 8.31907844543457 31.82889938354492 6.165756225585938 C 31.32890319824219 4.012434959411621 27.3889274597168 1.38578200340271 26.94893264770508 1.105783581733704 C 26.79980850219727 1.008432626724243 26.6179313659668 0.9747929573059082 26.44385528564453 1.012363910675049 C 26.26977157592773 1.0499347448349 26.11796188354492 1.155593037605286 26.02227020263672 1.305782437324524 C 25.74893951416016 1.732446908950806 23.35561752319336 5.565759658813477 23.88228225708008 7.81241512298584 C 24.29046249389648 9.724570274353027 25.87863922119141 11.15957069396973 27.82225799560547 11.37239456176758 Z M 26.79559326171875 2.60577654838562 C 28.27558517456055 3.645771265029907 30.23557662963867 5.339095592498779 30.50890731811523 6.472423553466797 C 30.93584823608398 7.86882209777832 30.23160934448242 9.361000061035156 28.88224792480469 9.919071197509766 C 28.70314407348633 9.188648223876953 28.48052597045898 8.469592094421387 28.2155876159668 7.765748500823975 C 28.08490753173828 7.425038814544678 27.70458602905273 7.252707481384277 27.36225891113281 7.379085540771484 C 27.19571304321289 7.440518856048584 27.06054306030273 7.565837383270264 26.98671340942383 7.727269649505615 C 26.91288375854492 7.888700008392334 26.90647506713867 8.072912216186523 26.96892929077148 8.239079475402832 C 27.17780303955078 8.812991142272949 27.35364151000977 9.39838695526123 27.49559020996094 9.992403984069824 C 26.30575561523438 9.674509048461914 25.39743041992188 8.711990356445313 25.14893341064453 7.50575065612793 C 24.91559982299805 6.379089832305908 25.93560028076172 4.119102478027344 26.79558944702148 2.605777263641357 Z">
          </path>
        </svg>
      </div>
      <div id="Better_eating_habits">
        <span>Better eating habits</span>
      </div>
    </div>
    <div id="Group_78">
      <div id="astronomy">
        <svg class="Path_64" viewBox="-0.928 32.792 40 40">
          <path id="Path_64" d="M 27.34305381774902 32.87589645385742 C 27.03180503845215 32.72138214111328 26.65628051757813 32.78312301635742 26.410888671875 33.02882766723633 C 26.16454887390137 33.2745361328125 26.10343933105469 33.64974212646484 26.25763893127441 33.96131134033203 C 27.58401298522949 36.63272857666016 28.27046585083008 39.57582473754883 28.26318359375 42.55854797363281 C 28.2508373260498 53.28062438964844 19.56147384643555 61.96969223022461 8.839393615722656 61.98201751708984 C 5.856719970703125 61.98928451538086 2.913625717163086 61.30283355712891 0.2419208437204361 59.97646713256836 C -0.0693279504776001 59.82226181030273 -0.4442201852798462 59.88368988037109 -0.6902434825897217 60.12972259521484 C -0.9359498023986816 60.37509918212891 -0.9976931810379028 60.75062561035156 -0.8434937000274658 61.06187438964844 C 3.221424102783203 69.29556274414063 12.15582084655762 73.94309234619141 21.23113250732422 72.54483795166016 C 30.30644035339355 71.14691925048828 37.42776870727539 64.02583312988281 38.82601165771484 54.95052719116211 C 40.22394180297852 45.87521743774414 35.57674026489258 36.94110870361328 27.34304809570313 32.87589645385742 Z M 18.02676010131836 71.17066955566406 C 11.46772766113281 71.19474029541016 5.346003532409668 67.88561248779297 1.773057103157043 62.38506317138672 C 4.040462017059326 63.19469451904297 6.431349277496338 63.60630798339844 8.839332580566406 63.60029602050781 C 20.4553165435791 63.58699798583984 29.86904144287109 54.17384338378906 29.88330841064453 42.55818176269531 C 29.88932228088379 40.15019607543945 29.47801971435547 37.75930786132813 28.66807556152344 35.49190521240234 C 35.85530471801758 40.19705963134766 39.09858703613281 49.06373977661133 36.6440315246582 57.29580307006836 C 34.18949127197266 65.52761840820313 26.61945152282715 71.16998291015625 18.02927589416504 71.17029571533203 Z M 18.02676010131836 71.17066955566406">
          </path>
        </svg>
        <svg class="Path_65" viewBox="59.132 167.52 13.374 12.799">
          <path id="Path_65" d="M 65.09278106689453 167.9716186523438 L 63.46466064453125 171.2687072753906 L 59.82530212402344 171.7977905273438 C 59.5203857421875 171.8421020507813 59.26676177978516 172.0558471679688 59.17146301269531 172.349365234375 C 59.07615661621094 172.6422729492188 59.15563201904297 172.9639282226563 59.37664031982422 173.1795959472656 L 62.00942993164063 175.746826171875 L 61.3875732421875 179.3713073730469 C 61.33563995361328 179.67529296875 61.46038818359375 179.9820861816406 61.70958709716797 180.1638488769531 C 61.95877075195313 180.344970703125 62.28933715820313 180.3690185546875 62.56227111816406 180.2258911132813 L 65.81788635253906 178.5144958496094 L 69.07349395751953 180.2258911132813 C 69.34611511230469 180.3690185546875 69.67667388916016 180.344970703125 69.92586517333984 180.1638488769531 C 70.175048828125 179.9823913574219 70.2998046875 179.6755981445313 70.24787902832031 179.3719482421875 L 69.62855529785156 175.7487182617188 L 72.26134490966797 173.1814575195313 C 72.48204040527344 172.9664916992188 72.56119537353516 172.6444702148438 72.46620178222656 172.3512573242188 C 72.37090301513672 172.0577392578125 72.11727905273438 171.8440246582031 71.81236267089844 171.7997131347656 L 68.17300415039063 171.2687072753906 L 66.54582977294922 167.9716186523438 C 66.40936279296875 167.6948852539063 66.12755584716797 167.519775390625 65.81916046142578 167.519775390625 C 65.51107025146484 167.519775390625 65.22927093505859 167.6948852539063 65.09280395507813 167.9716186523438 Z M 66.90899658203125 172.3683471679688 C 67.027099609375 172.6077270507813 67.25506591796875 172.7733459472656 67.51914215087891 172.8116455078125 L 69.9559326171875 173.166259765625 L 68.19261169433594 174.8849487304688 C 68.00168609619141 175.0708312988281 67.91493225097656 175.3390197753906 67.95989990234375 175.6015014648438 L 68.37562561035156 178.0287780761719 L 66.19593811035156 176.8829040527344 C 65.96035766601563 176.7587890625 65.67823791503906 176.7587890625 65.44235229492188 176.8829040527344 L 63.26266479492188 178.0287780761719 L 63.67903137207031 175.6021118164063 C 63.72431182861328 175.3390197753906 63.63723754882813 175.0708312988281 63.44598388671875 174.8849487304688 L 61.68267059326172 173.1653442382813 L 64.11946868896484 172.8110046386719 C 64.38321685791016 172.7723999023438 64.61151123046875 172.6067810058594 64.72930145263672 172.3674011230469 L 65.81915283203125 170.1598510742188 L 66.90899658203125 172.3683471679688 Z M 66.90899658203125 172.3683471679688">
          </path>
        </svg>
        <svg class="Path_66" viewBox="51.488 0.001 7.549 7.499">
          <path id="Path_66" d="M 52.19854354858398 6.755983352661133 L 58.12525939941406 7.494051933288574 C 58.1588249206543 7.497851371765137 58.19301605224609 7.500067710876465 58.22657775878906 7.500067710876465 C 58.65498352050781 7.500067710876465 59.00897598266602 7.166971206665039 59.03557586669922 6.739518165588379 C 59.06153869628906 6.312064647674561 58.75060653686523 5.938122272491455 58.32568740844727 5.885558128356934 L 54.36810684204102 5.393194675445557 L 58.57709884643555 2.18191385269165 C 58.83736801147461 1.983068346977234 58.95231246948242 1.646806001663208 58.86839294433594 1.330174803733826 C 58.78417205810547 1.013543009757996 58.51757049560547 0.7786020040512085 58.19301986694336 0.7349069118499756 L 52.75897979736328 0.007920067757368088 C 52.31569671630859 -0.0512901172041893 51.90819549560547 0.2602756023406982 51.84865951538086 0.7035602927207947 C 51.78945159912109 1.147161841392517 52.10070037841797 1.554666876792908 52.54462051391602 1.613879442214966 L 56.03611755371094 2.081861734390259 L 51.80654525756836 5.30802583694458 C 51.54469299316406 5.507819652557373 51.42975616455078 5.845666408538818 51.51587677001953 6.163566112518311 C 51.60168838500977 6.481465339660645 51.87082290649414 6.715455055236816 52.19758605957031 6.756301403045654 Z M 52.19854354858398 6.755983352661133">
          </path>
        </svg>
        <svg class="Path_67" viewBox="172.416 56.36 6.766 6.723">
          <path id="Path_67" d="M 172.4442901611328 61.84358978271484 C 172.5301055908203 62.16181182861328 172.7998809814453 62.39579772949219 173.1266479492188 62.43633270263672 L 178.2709503173828 63.07656097412109 C 178.3045196533203 63.08099365234375 178.3384094238281 63.08289337158203 178.3722686767578 63.08289337158203 C 178.8003692626953 63.08289337158203 179.1546936035156 62.74979400634766 179.1809692382813 62.32233428955078 C 179.2072296142578 61.89521026611328 178.8963012695313 61.52095031738281 178.4710540771484 61.46869659423828 L 175.2958831787109 61.07353973388672 L 178.7389526367188 58.44549560546875 C 179.0001525878906 58.246337890625 179.1151123046875 57.91006469726563 179.0308837890625 57.59343719482422 C 178.9469757080078 57.2764892578125 178.6800384521484 57.04154968261719 178.3551788330078 56.99784851074219 L 173.6405334472656 56.36743927001953 C 173.1972503662109 56.3082275390625 172.7897491455078 56.61947631835938 172.730224609375 57.06275939941406 C 172.6710052490234 57.50668334960938 172.9822387695313 57.9141845703125 173.4261779785156 57.97339630126953 L 176.2011260986328 58.34481048583984 L 172.735595703125 60.98837280273438 C 172.4737396240234 61.18784332275391 172.3585052490234 61.52600860595703 172.4442901611328 61.84358978271484 Z M 172.4442901611328 61.84358978271484">
          </path>
        </svg>
      </div>
      <div id="Quality_sleep_cycle">
        <span>Quality sleep cycle</span>
      </div>
    </div>
    <div id="Group_77">
      <div id="idea">
        <svg class="Path_88" viewBox="141.084 248.756 4.514 2.002">
          <path id="Path_88" d="M 141.3605499267578 250.5856628417969 C 141.5022735595703 250.7018737792969 141.6730499267578 250.7584228515625 141.8426208496094 250.7584228515625 C 142.0617065429688 250.7584228515625 142.2792053222656 250.6637878417969 142.4295654296875 250.4812469482422 C 142.4825439453125 250.4211883544922 142.7632598876953 250.2861328125 143.2528076171875 250.2758941650391 C 143.7918395996094 250.2664947509766 144.1848449707031 250.4145202636719 144.2900390625 250.5244140625 C 144.58056640625 250.8271179199219 145.0610961914063 250.8369293212891 145.3637390136719 250.5467987060547 C 145.6664428710938 250.2566833496094 145.6766662597656 249.7757720947266 145.3865356445313 249.4730682373047 C 144.9236602783203 248.9901733398438 144.086669921875 248.7255859375 143.1488037109375 248.7593688964844 C 142.6588439941406 248.7781982421875 141.7617797851563 248.9014587402344 141.2565002441406 249.5162506103516 C 140.9899444580078 249.8401336669922 141.0366516113281 250.319091796875 141.3605499267578 250.5856628417969 Z M 141.3605499267578 250.5856628417969">
          </path>
        </svg>
        <svg class="Path_89" viewBox="223.782 248.753 4.514 2.002">
          <path id="Path_89" d="M 224.0574493408203 250.5809936523438 C 224.1991729736328 250.6980133056641 224.3707427978516 250.7553100585938 224.5411071777344 250.7553100585938 C 224.7597808837891 250.7553100585938 224.9765167236328 250.6611022949219 225.1268463134766 250.4797210693359 C 225.1798553466797 250.4192504882813 225.4613189697266 250.2830200195313 225.9524841308594 250.2728118896484 C 226.4930572509766 250.2630004882813 226.8829345703125 250.4106140136719 226.9873199462891 250.5197448730469 C 227.2770690917969 250.8232269287109 227.7576141357422 250.8346099853516 228.0610809326172 250.5448608398438 C 228.3645172119141 250.2551422119141 228.3755340576172 249.7742156982422 228.0861968994141 249.4707946777344 C 227.6268768310547 248.9898529052734 226.7934112548828 248.7225036621094 225.8594207763672 248.7558441162109 C 225.0220489501953 248.7856903076172 224.3283233642578 249.0612945556641 223.9561462402344 249.5115814208984 C 223.6888122558594 249.8350677490234 223.7343292236328 250.3136444091797 224.0574493408203 250.5809936523438 Z M 224.0574493408203 250.5809936523438">
          </path>
        </svg>
        <svg class="Path_90" viewBox="8.053 46.954 39.191 46.738">
          <path id="Path_90" d="M 47.23870849609375 89.60350036621094 C 47.23792266845703 89.58465576171875 47.23635482788086 89.56620788574219 47.2343864440918 89.54775238037109 C 47.06283187866211 88.01312255859375 46.5803337097168 85.66898345947266 45.25339126586914 83.21529388427734 C 45.05395889282227 82.84626007080078 44.59305572509766 82.70884704589844 44.22402572631836 82.90869140625 C 43.8549919128418 83.10811614990234 43.71758651733398 83.56903076171875 43.91701889038086 83.93804931640625 C 44.85726547241211 85.67643737792969 45.49758529663086 87.71750640869141 45.72174835205078 89.68827819824219 C 45.75040435791016 90.54531097412109 45.59494400024414 91.12005615234375 45.23336410522461 91.49577331542969 C 44.80033874511719 91.9456787109375 44.00142669677734 92.17376708984375 42.85860061645508 92.17376708984375 L 39.33472442626953 92.17376708984375 L 39.33472442626953 88.50699615478516 C 39.33472442626953 88.08731842041016 38.99474716186523 87.74732971191406 38.57506561279297 87.74732971191406 C 38.15538787841797 87.74732971191406 37.81540679931641 88.08731842041016 37.81540679931641 88.50699615478516 L 37.81540679931641 92.17376708984375 L 17.25628280639648 92.17376708984375 L 17.25628280639648 88.65225982666016 C 17.25628280639648 88.23297119140625 16.91590881347656 87.89259338378906 16.49662399291992 87.89259338378906 C 16.07694625854492 87.89259338378906 15.73696517944336 88.23297119140625 15.73696517944336 88.65225982666016 L 15.73696517944336 92.17376708984375 L 12.43765544891357 92.17376708984375 C 11.2960033416748 92.17376708984375 10.4978723526001 91.94606781005859 10.06523990631104 91.49735260009766 C 9.703272819519043 91.12202453613281 9.547414779663086 90.54689025878906 9.574503898620605 89.68790435791016 C 9.754308700561523 88.12855529785156 10.85317039489746 81.63316345214844 16.83778381347656 78.45201110839844 C 17.00541687011719 80.07379150390625 17.73876953125 81.64335632324219 18.97071838378906 82.97031402587891 C 20.41348648071289 84.52337646484375 22.44433975219727 85.61203765869141 24.54390335083008 85.95789337158203 L 24.5442943572998 85.95789337158203 L 24.54468536376953 85.95789337158203 C 24.54507827758789 85.95789337158203 24.54507827758789 85.95829010009766 24.54547119140625 85.95829010009766 C 25.55127906799316 86.12516021728516 26.5178394317627 86.20838928222656 27.52600860595703 86.20838928222656 C 28.52907180786133 86.20838928222656 29.57336044311523 86.12593841552734 30.73737907409668 85.96065521240234 C 30.74091339111328 85.96026611328125 30.74444770812988 85.95908355712891 30.74798202514648 85.95868682861328 C 30.74994277954102 85.95829010009766 30.75190544128418 85.95829010009766 30.75386810302734 85.95789337158203 C 32.85382080078125 85.61283111572266 34.88547134399414 84.52378082275391 36.32822799682617 82.97031402587891 C 37.55781936645508 81.64610290527344 38.29038238525391 80.08045196533203 38.45998001098633 78.46260833740234 C 39.91373443603516 79.23050689697266 41.18455123901367 80.24495697021484 42.25749206542969 81.50555419921875 C 42.40785217285156 81.68182373046875 42.62142181396484 81.77291107177734 42.83616638183594 81.77291107177734 C 43.01047897338867 81.77291107177734 43.18517684936523 81.71323394775391 43.32807922363281 81.59152984619141 C 43.64765167236328 81.31986236572266 43.68612289428711 80.84011077880859 43.41405868530273 80.52094268798828 C 41.96069717407227 78.81317901611328 40.19051742553711 77.50782012939453 38.12746047973633 76.615478515625 C 38.05640029907227 76.57032012939453 37.97788238525391 76.53615570068359 37.89386749267578 76.51653289794922 C 37.2822151184082 76.26410675048828 36.64582443237305 76.04700469970703 35.98431396484375 75.86600494384766 C 38.24562835693359 73.80570983886719 39.55333709716797 71.08036041259766 39.55333709716797 68.29573822021484 L 39.55333709716797 58.77075958251953 L 42.24413681030273 58.14143371582031 L 42.24413681030273 60.57980728149414 C 41.46170806884766 60.88484954833984 40.90462875366211 61.64450836181641 40.90462875366211 62.53371810913086 L 40.90462875366211 64.63838958740234 C 40.90462875366211 65.79534149169922 41.8464469909668 66.73676300048828 43.0037956237793 66.73676300048828 C 44.15957260131836 66.73676300048828 45.10021591186523 65.79534149169922 45.10021591186523 64.63838958740234 L 45.10021591186523 62.53371810913086 C 45.10021591186523 61.64529037475586 44.54431533813477 60.88562774658203 43.7630615234375 60.58019638061523 L 43.7630615234375 57.63499450683594 C 44.3173942565918 57.25104522705078 44.55412673950195 56.65627670288086 44.53214263916016 56.11371612548828 C 44.56197738647461 55.36819839477539 44.10618209838867 54.52058792114258 43.00301742553711 54.26344299316406 L 30.36249160766602 51.30802917480469 C 29.24990081787109 51.03047180175781 28.65394973754883 50.89973831176758 28.00813674926758 50.89973831176758 C 27.36468696594238 50.89973831176758 26.76913261413574 51.03047180175781 25.65692901611328 51.30802917480469 L 22.16720390319824 52.12304306030273 C 21.91790771484375 50.85302352905273 21.33844947814941 49.74671173095703 20.45316123962402 48.87359237670898 C 19.19059753417969 47.62948226928711 17.351318359375 46.92909622192383 15.41035938262939 46.95501327514648 C 13.47253894805908 46.93146514892578 11.63051700592041 47.62908935546875 10.3675594329834 48.87320327758789 C 9.154854774475098 50.06745147705078 8.512190818786621 51.69826889038086 8.50943660736084 53.59015274047852 C 8.507866859436035 55.98258972167969 9.620855331420898 57.32680892944336 10.60310745239258 58.51242828369141 C 11.37729263305664 59.44717788696289 12.05843448638916 60.27044296264648 12.2135009765625 61.55655670166016 C 11.30387401580811 61.93580627441406 10.66277599334717 62.83483505249023 10.66277599334717 63.88108062744141 C 10.66277599334717 65.2677001953125 11.79068565368652 66.39521789550781 13.17730236053467 66.39521789550781 L 15.77702522277832 66.39521789550781 L 15.77702522277832 68.29613494873047 C 15.77702522277832 71.07878875732422 17.04312705993652 73.75035858154297 19.34565544128418 75.84128570556641 C 15.97566795349121 76.76348114013672 13.25111198425293 78.61255645751953 11.23202323913574 81.35402679443359 C 8.922030448913574 84.49040222167969 8.254632949829102 87.83370208740234 8.061867713928223 89.5477294921875 C 8.059905052185059 89.56657409667969 8.058333396911621 89.5858154296875 8.057941436767578 89.60465240478516 C 8.010831832885742 90.9013671875 8.309982299804688 91.86517333984375 8.971888542175293 92.55181884765625 C 9.712309837341309 93.31932067871094 10.84610080718994 93.69267272949219 12.43766117095947 93.69267272949219 L 42.85860824584961 93.69267272949219 C 44.45212936401367 93.69267272949219 45.58709716796875 93.31854248046875 46.3275146484375 92.54946136474609 C 46.98981475830078 91.86164855957031 47.28778839111328 90.89823150634766 47.23871612548828 89.60347747802734 Z M 25.70089149475098 84.58660888671875 L 26.74634742736816 81.69322204589844 L 28.55029106140137 81.69322204589844 L 29.59261322021484 84.57285308837891 C 28.17301177978516 84.72557067871094 26.95677375793457 84.72989654541016 25.70088005065918 84.58658599853516 Z M 26.16806983947754 79.05463409423828 C 26.66548347473145 79.12294769287109 27.16485023498535 79.16062927246094 27.66187286376953 79.16376495361328 L 27.72900581359863 79.16376495361328 C 28.21031951904297 79.16376495361328 28.69516372680664 79.12961578369141 29.17962074279785 79.06563568115234 L 28.61703872680664 80.17389678955078 L 26.69532012939453 80.17389678955078 L 26.16806983947754 79.05463409423828 Z M 36.97874450683594 77.79011535644531 C 36.94576263427734 80.74787139892578 34.45596313476563 83.52504730224609 31.12171745300293 84.33416748046875 L 29.9094066619873 80.98421478271484 L 31.09463310241699 78.64910125732422 C 32.26336669921875 78.29380798339844 33.39913177490234 77.76067352294922 34.44458389282227 77.06578826904297 C 35.33458709716797 77.24246215820313 36.18021392822266 77.48349761962891 36.97874450683594 77.79011535644531 Z M 43.58129119873047 62.53371429443359 L 43.58129119873047 64.63837432861328 C 43.58129119873047 64.95244598388672 43.31668853759766 65.21783447265625 43.0037956237793 65.21783447265625 C 42.6893310546875 65.21783447265625 42.42354965209961 64.95244598388672 42.42354965209961 64.63837432861328 L 42.42354965209961 62.53371429443359 C 42.42354965209961 62.21453475952148 42.68383407592773 61.95464324951172 43.0037956237793 61.95464324951172 C 43.32218551635742 61.95464324951172 43.58129119873047 62.21453475952148 43.58129119873047 62.53371429443359 Z M 22.30688858032227 53.65021514892578 L 26.00742530822754 52.78612899780273 C 26.01135063171387 52.78534698486328 26.01488494873047 52.78456115722656 26.01881217956543 52.78338241577148 C 27.01206207275391 52.53565979003906 27.5318489074707 52.41866683959961 28.00806045532227 52.41866683959961 C 28.48662567138672 52.41866683959961 29.00720024108887 52.53565979003906 30.00005722045898 52.78338241577148 C 30.00398063659668 52.78456115722656 30.00751495361328 52.78534698486328 30.01104927062988 52.78612899780273 L 42.65789794921875 55.74271392822266 C 43.03085708618164 55.82947540283203 43.01829528808594 56.00221633911133 43.01436996459961 56.05875015258789 C 43.01162338256836 56.09565734863281 43.01162338256836 56.13216018676758 43.01436996459961 56.16907119750977 C 43.01751327514648 56.21147155761719 43.02496719360352 56.31824493408203 42.87264633178711 56.40619659423828 C 42.78705978393555 56.42111587524414 42.70658111572266 56.44977188110352 42.6335563659668 56.49059677124023 L 38.6491813659668 57.42220687866211 C 38.63661575317383 57.42456817626953 38.62444686889648 57.42770767211914 38.61188125610352 57.43085098266602 L 30.01105880737305 59.44168853759766 C 30.00752639770508 59.44247055053711 30.00359916687012 59.44326019287109 30.00006484985352 59.44403839111328 C 29.00721168518066 59.69216156005859 28.48663711547852 59.80914688110352 28.00807571411133 59.80914688110352 C 27.53186416625977 59.80914688110352 27.01207733154297 59.69216156005859 26.01882362365723 59.44403839111328 C 26.01529121398926 59.44326019287109 26.01136589050293 59.44247055053711 26.0074405670166 59.44129180908203 L 20.50885009765625 58.15753555297852 C 21.39766883850098 57.06260681152344 22.29277038574219 55.77137756347656 22.30690002441406 53.65021514892578 Z M 10.02827835083008 53.59133529663086 C 10.03063488006592 52.1155891418457 10.51626682281494 50.85852432250977 11.43335723876953 49.95517730712891 C 12.41129398345947 48.99215316772461 13.85915946960449 48.44842147827148 15.39928150177002 48.47393417358398 L 15.42048263549805 48.47393417358398 C 16.96610450744629 48.45038604736328 18.40925979614258 48.9925422668457 19.38680076599121 49.95557022094727 C 20.30270957946777 50.85852432250977 20.78755569458008 52.1155891418457 20.78873252868652 53.59133529663086 C 20.79148292541504 55.43650054931641 19.98274612426758 56.41324615478516 19.04603576660156 57.54429626464844 C 18.8803653717041 57.74452972412109 18.71076774597168 57.95024108886719 18.54352378845215 58.16419219970703 C 18.54038429260254 58.16812515258789 18.53763389587402 58.17205047607422 18.53449440002441 58.17597961425781 C 17.87965393066406 59.01650619506836 17.26760482788086 59.99484634399414 17.09958839416504 61.36419296264648 L 16.16954612731934 61.36419296264648 L 16.16954612731934 56.48588562011719 L 17.24484443664551 56.48588562011719 C 17.66412925720215 56.48588562011719 18.00411033630371 56.14589309692383 18.00411033630371 55.72661972045898 C 18.00411033630371 55.30693435668945 17.66412734985352 54.96695709228516 17.24484443664551 54.96695709228516 L 13.50151062011719 54.96695709228516 C 13.0818338394165 54.96695709228516 12.74185180664063 55.30693435668945 12.74185180664063 55.72661972045898 C 12.74185180664063 56.14589309692383 13.0818338394165 56.48588562011719 13.50151062011719 56.48588562011719 L 14.65061569213867 56.48588562011719 L 14.65061569213867 61.36419296264648 L 13.72057437896729 61.36419296264648 C 13.50857830047607 59.63915634155273 12.5926628112793 58.53322982788086 11.77294445037842 57.54352569580078 C 10.83623027801514 56.41247177124023 10.02710342407227 55.43570709228516 10.02827835083008 53.59133529663086 Z M 12.1816291809082 63.88109588623047 C 12.1816291809082 63.33068084716797 12.62839508056641 62.88314056396484 13.17723178863525 62.88314056396484 L 17.64292907714844 62.88314056396484 C 18.1917667388916 62.88314056396484 18.6385326385498 63.33068084716797 18.6385326385498 63.88109588623047 C 18.6385326385498 64.429931640625 18.1917667388916 64.87630462646484 17.64292907714844 64.87630462646484 L 13.17723369598389 64.87630462646484 C 12.62800216674805 64.87630462646484 12.1816291809082 64.429931640625 12.1816291809082 63.88109588623047 Z M 17.29587936401367 68.29576110839844 L 17.29587936401367 66.39522552490234 L 17.6429271697998 66.39522552490234 C 18.54627418518066 66.39522552490234 19.33969497680664 65.91587829589844 19.78332328796387 65.1986083984375 L 26.44358062744141 65.1986083984375 C 26.86326026916504 65.1986083984375 27.2032413482666 64.85863494873047 27.2032413482666 64.43934631347656 C 27.2032413482666 64.01967620849609 26.86326026916504 63.67969512939453 26.44358062744141 63.67969512939453 L 20.14881896972656 63.67969512939453 C 20.072265625 62.72059631347656 19.45747375488281 61.91146469116211 18.60672950744629 61.55657196044922 C 18.7080135345459 60.71839141845703 19.03268814086914 60.07651138305664 19.46060752868652 59.47270965576172 L 25.65643692016602 60.91939544677734 C 26.76902961730957 61.19734954833984 27.36458778381348 61.32807159423828 28.00803565979004 61.32807159423828 C 28.65423965454102 61.32807159423828 29.25019264221191 61.19734954833984 30.36239433288574 60.91939544677734 L 38.03474807739258 59.12565612792969 L 38.03474807739258 63.67967987060547 L 29.81433296203613 63.67967987060547 C 29.39465522766113 63.67967987060547 29.05467414855957 64.01966094970703 29.05467414855957 64.43933868408203 C 29.05467414855957 64.85861968994141 29.39465522766113 65.19860076904297 29.81433296203613 65.19860076904297 L 38.03474807739258 65.19860076904297 L 38.03474807739258 68.29573822021484 C 38.03474807739258 71.14277648925781 36.38940811157227 73.94116973876953 33.63304138183594 75.78201293945313 C 31.83577156066895 76.98450469970703 29.74170112609863 77.64484405517578 27.72968482971191 77.64484405517578 C 27.71044731140137 77.64484405517578 27.69121170043945 77.64484405517578 27.67197418212891 77.64484405517578 C 26.80082130432129 77.63895416259766 25.94262504577637 77.51921081542969 25.11504554748535 77.30249786376953 C 25.06008338928223 77.28090667724609 25.00276565551758 77.26521301269531 24.94387817382813 77.25696563720703 C 20.69096946716309 76.06898498535156 17.29585456848145 72.32015991210938 17.29585456848145 68.29573822021484 Z M 20.88571166992188 77.03948211669922 C 21.94452857971191 77.74103546142578 23.09991455078125 78.28281402587891 24.2961311340332 78.64398956298828 L 25.3918399810791 80.9720458984375 L 24.17716979980469 84.33416748046875 C 20.83781433105469 83.52386474609375 18.34567070007324 80.73923492431641 18.32054138183594 77.7763671875 C 19.103759765625 77.47329711914063 19.95685386657715 77.22360229492188 20.88571166992188 77.03948211669922 Z M 20.88571166992188 77.03948211669922">
          </path>
        </svg>
        <svg class="Path_91" viewBox="73.727 0 1.519 3.399">
          <path id="Path_91" d="M 74.48626708984375 3.39865517616272 C 74.90554046630859 3.39865517616272 75.24554443359375 3.058673858642578 75.24554443359375 2.639388561248779 L 75.24554443359375 0.7596774101257324 C 75.24554443359375 0.3400003910064697 74.90554046630859 1.898876143968664e-05 74.48626708984375 1.898876143968664e-05 C 74.06658935546875 1.898876143968664e-05 73.72660827636719 0.3400003910064697 73.72660827636719 0.7596774101257324 L 73.72660827636719 2.639388561248779 C 73.72660827636719 3.058674097061157 74.06658935546875 3.39865517616272 74.48626708984375 3.39865517616272 Z M 74.48626708984375 3.39865517616272">
          </path>
        </svg>
        <svg class="Path_92" viewBox="0.001 22.134 2.847 2.849">
          <path id="Path_92" d="M 2.089008092880249 24.98353958129883 C 2.283339023590088 24.98353958129883 2.477670907974243 24.90933990478516 2.625676393508911 24.76132965087891 C 2.922473669052124 24.46492385864258 2.922865629196167 23.98400688171387 2.626461267471313 23.68720817565918 L 1.297936797142029 22.35711479187012 C 1.001925349235535 22.06032180786133 0.5210041403770447 22.05992889404297 0.2242066562175751 22.35633087158203 C -0.07259079813957214 22.65273475646973 -0.07298275083303452 23.1336555480957 0.2234215438365936 23.43045425415039 L 1.551543951034546 24.76054573059082 C 1.699942231178284 24.90894508361816 1.894666194915771 24.9835376739502 2.088998079299927 24.9835376739502 Z M 2.089008092880249 24.98353958129883">
          </path>
        </svg>
        <svg class="Path_93" viewBox="134.236 22.134 2.847 2.849">
          <path id="Path_93" d="M 134.9952697753906 24.9835376739502 C 135.1896057128906 24.9835376739502 135.3843383789063 24.90894508361816 135.5327453613281 24.76054573059082 L 136.8608703613281 23.43045234680176 C 137.1572570800781 23.13365745544434 137.1572570800781 22.65273666381836 136.8604736328125 22.35633087158203 C 136.5636749267578 22.05992698669434 136.0827484130859 22.0603199005127 135.7863616943359 22.35711669921875 L 134.4578247070313 23.68721008300781 C 134.1614074707031 23.98400497436523 134.1618041992188 24.46492576599121 134.4586029052734 24.76133155822754 C 134.6070098876953 24.90933799743652 134.8009643554688 24.9835376739502 134.9952697753906 24.9835376739502 Z M 134.9952697753906 24.9835376739502">
          </path>
        </svg>
      </div>
      <div id="Sharper_Focus">
        <span>Sharper Focus</span>
      </div>
    </div>
  </div>
  <div id="Advaita_will_be_FREE_forever_w">
    <span>Advaita will be FREE forever with all the <br/>community efforts made to improve our lifestyles</span>
  </div>
</div>


<div id="ViewScaleSlider">

  <input id="ViewScaleSliderInput" type="range" value="100" min="5" max="400" step="1" oninput="application.sliderChangeHandler(event)" onchange="application.sliderChangeHandler(event)"></input>
  
  <style>
  #ViewScaleSlider {
    box-sizing: border-box;
    position: absolute;
    position: fixed;
    top: 20px;
    right: 20px;
  }
  #ViewScaleSliderInput {
    box-sizing: border-box;
    margin: 0px;
    padding: 3px;
    position: relative;
    background-color: rgba(0, 0, 0, 0.5);
    border: 12px solid rgba(0, 0, 0, 0);
    border-radius: 12px;
  }
  input[type="range"]::-ms-fill-lower,
  input[type="range"]::-ms-fill-upper {
    background: transparent;
  }
  input[type="range"]::-ms-track {
    border-radius: 8px;
    height: 7px;
    border: 1px solid #bdc3c7;
    background-color: #fff;
  }
  input[type="range"]::-ms-thumb {
    background-color: #ecf0f1;
    border: 1px solid #bdc3c7;
    width: 16px;
    height: 16px;
    border-radius: 8px;
    cursor: pointer;
  }

  .NoScriptSliderGroup {
    position: fixed;
    min-width: 20px;
    min-height: 10px;
    overflow: visible;
    text-align: left;
    padding: 4px;
    padding-left: 16px;
    padding-right: 16px;
    font-family: Arial, sans-serif, Helvetica, Georgia;
    font-size: 12px;
    font-weight: bold;
    left: 20px;
    bottom: 20px;
    background-color: rgba(0,0,0,.5);
    border-radius: 12px;
    color:rgb(235, 235, 235);
    transition: all 2s linear;
  }

  .PageRefreshedClass {
    position: fixed;
    min-width: 20px;
    min-height: 10px;
    padding: 4px;
    padding-left: 16px;
    padding-right: 16px;
    font-family: Arial, sans-serif, Helvetica, Georgia;
    font-size: 12px;
    font-weight: bold;
    left: 20px;
    top: 20px;
    background-color: rgba(0,0,0,.5);
    border-radius: 12px;
    color:rgb(235, 235, 235);
    transition: all 2s linear;
  }
  </style>

  <noscript>
    <div class="NoScriptSliderGroup"><span>JavaScript must be enabled to use some features on this page</span>
    </div>
  </noscript>
</div>

</body>
</html>